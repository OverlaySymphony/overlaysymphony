{
  "automod.message.hold@1": {
    "id": "automod.message.hold@1",
    "label": "Automod Message Hold",
    "type": "automod.message.hold",
    "version": "1",
    "primary": false,
    "scopes": ["moderator:manage:automod"],
    "description": "the user's message is caught by automod for review.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the broadcaster (channel)."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the moderator."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster specified in the request."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the broadcaster specified in the request."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the broadcaster specified in the request."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The message sender's user ID."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The message sender's login name."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The message sender's display name."
        },
        "message_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the message that was flagged by automod."
        },
        "message": {
          "type": "object",
          "required": true,
          "description": "The body of the message.",
          "fields": {
            "text": {
              "type": "string",
              "required": true,
              "description": "The contents of the message caught by automod."
            },
            "fragments": {
              "type": "object[]",
              "required": true,
              "description": "Metadata surrounding the potential inappropriate fragments of the message.",
              "fields": {
                "text": {
                  "type": "string",
                  "required": true,
                  "description": "Message text in a fragment."
                },
                "emote": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the emote.",
                  "fields": {
                    "id": {
                      "type": "string",
                      "required": true,
                      "description": "An ID that uniquely identifies this emote."
                    },
                    "emote_set_id": {
                      "type": "string",
                      "required": true,
                      "description": "An ID that identifies the emote set that the emote belongs to."
                    }
                  }
                },
                "cheermote": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the cheermote.",
                  "fields": {
                    "prefix": {
                      "type": "string",
                      "required": true,
                      "description": "The name portion of the Cheermote string that you use in chat to cheer Bits. The full Cheermote string is the concatenation of {prefix} + {number of Bits}."
                    },
                    "bits": {
                      "type": "number",
                      "required": true,
                      "description": "The amount of Bits cheered."
                    },
                    "tier": {
                      "type": "number",
                      "required": true,
                      "description": "The tier level of the cheermote."
                    }
                  }
                }
              }
            }
          }
        },
        "category": {
          "type": "string",
          "required": true,
          "description": "The category of the message."
        },
        "level": {
          "type": "number",
          "required": true,
          "description": "The level of severity. Measured between 1 to 4."
        },
        "held_at": {
          "type": "string",
          "required": true,
          "description": "The timestamp of when automod saved the message."
        }
      }
    }
  },
  "automod.message.hold@2": {
    "id": "automod.message.hold@2",
    "label": "Automod Message Hold V2",
    "type": "automod.message.hold",
    "version": "2",
    "primary": true,
    "scopes": ["moderator:manage:automod"],
    "description": "the user's message is caught by automod for review.  Only public blocked terms trigger notifications, not private ones.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the broadcaster (channel)."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the moderator."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster specified in the request."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the broadcaster specified in the request."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the broadcaster specified in the request."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The message sender's user ID."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The message sender's login name."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The message sender's display name."
        },
        "message_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the message that was flagged by automod."
        },
        "message": {
          "type": "object",
          "required": true,
          "description": "The body of the message.",
          "fields": {
            "text": {
              "type": "string",
              "required": true,
              "description": "The contents of the message caught by automod."
            },
            "fragments": {
              "type": "object[]",
              "required": true,
              "description": "Metadata surrounding the potential inappropriate fragments of the message.",
              "fields": {
                "text": {
                  "type": "string",
                  "required": true,
                  "description": "Message text in a fragment."
                },
                "emote": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the emote.",
                  "fields": {
                    "id": {
                      "type": "string",
                      "required": true,
                      "description": "An ID that uniquely identifies this emote."
                    },
                    "emote_set_id": {
                      "type": "string",
                      "required": true,
                      "description": "An ID that identifies the emote set that the emote belongs to."
                    }
                  }
                },
                "cheermote": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the cheermote.",
                  "fields": {
                    "prefix": {
                      "type": "string",
                      "required": true,
                      "description": "The name portion of the Cheermote string that you use in chat to cheer Bits. The full Cheermote string is the concatenation of {prefix} + {number of Bits}."
                    },
                    "bits": {
                      "type": "number",
                      "required": true,
                      "description": "The amount of Bits cheered."
                    },
                    "tier": {
                      "type": "number",
                      "required": true,
                      "description": "The tier level of the cheermote."
                    }
                  }
                }
              }
            }
          }
        },
        "category": {
          "type": "string",
          "required": true,
          "description": "The category of the message."
        },
        "level": {
          "type": "number",
          "required": true,
          "description": "The level of severity. Measured between 1 to 4."
        },
        "held_at": {
          "type": "string",
          "required": true,
          "description": "The timestamp of when automod saved the message."
        }
      }
    }
  },
  "automod.message.update@1": {
    "id": "automod.message.update@1",
    "label": "Automod Message Update",
    "type": "automod.message.update",
    "version": "1",
    "primary": false,
    "scopes": ["moderator:manage:automod"],
    "description": "a message in the automod queue had its status changed.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the broadcaster (channel). Maximum:1."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the moderator."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster specified in the request."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the broadcaster specified in the request."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the broadcaster specified in the request."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The message sender's user ID."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The message sender's login name."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The message sender's display name."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the moderator."
        },
        "moderator_user_name": {
          "type": "string",
          "required": true,
          "description": "TThe moderator's user name."
        },
        "moderator_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the moderator."
        },
        "message_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the message that was flagged by automod."
        },
        "message": {
          "type": "object",
          "required": true,
          "description": "The body of the message.",
          "fields": {
            "text": {
              "type": "string",
              "required": true,
              "description": "The contents of the message caught by automod."
            },
            "fragments": {
              "type": "object[]",
              "required": true,
              "description": "Metadata surrounding the potential inappropriate fragments of the message.",
              "fields": {
                "text": {
                  "type": "string",
                  "required": true,
                  "description": "Message text in a fragment."
                },
                "emote": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the emote.",
                  "fields": {
                    "id": {
                      "type": "string",
                      "required": true,
                      "description": "An ID that uniquely identifies this emote."
                    },
                    "emote_set_id": {
                      "type": "string",
                      "required": true,
                      "description": "An ID that identifies the emote set that the emote belongs to."
                    }
                  }
                },
                "cheermote": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the cheermote.",
                  "fields": {
                    "prefix": {
                      "type": "string",
                      "required": true,
                      "description": "The name portion of the Cheermote string that you use in chat to cheer Bits. The full Cheermote string is the concatenation of {prefix} + {number of Bits}."
                    },
                    "bits": {
                      "type": "number",
                      "required": true,
                      "description": "The amount of Bits cheered."
                    },
                    "tier": {
                      "type": "number",
                      "required": true,
                      "description": "The tier level of the cheermote."
                    }
                  }
                }
              }
            }
          }
        },
        "category": {
          "type": "string",
          "required": true,
          "description": "The category of the message."
        },
        "level": {
          "type": "number",
          "required": true,
          "description": "The level of severity. Measured between 1 to 4."
        },
        "status": {
          "type": "string",
          "required": true,
          "description": "The message's status. Possible values are:\n- Approved\n- Denied\n- Expired"
        },
        "held_at": {
          "type": "string",
          "required": true,
          "description": "The timestamp of when automod saved the message."
        }
      }
    }
  },
  "automod.message.update@2": {
    "id": "automod.message.update@2",
    "label": "Automod Message Update V2",
    "type": "automod.message.update",
    "version": "2",
    "primary": true,
    "scopes": ["moderator:manage:automod"],
    "description": "a message in the automod queue had its status changed. Only public blocked terms trigger notifications, not private ones.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the broadcaster (channel). Maximum:1."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the moderator."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster specified in the request."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the broadcaster specified in the request."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the broadcaster specified in the request."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The message sender's user ID."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The message sender's login name."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The message sender's display name."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the moderator."
        },
        "moderator_user_name": {
          "type": "string",
          "required": true,
          "description": "TThe moderator's user name."
        },
        "moderator_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the moderator."
        },
        "message_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the message that was flagged by automod."
        },
        "message": {
          "type": "object",
          "required": true,
          "description": "The body of the message.",
          "fields": {
            "text": {
              "type": "string",
              "required": true,
              "description": "The contents of the message caught by automod."
            },
            "fragments": {
              "type": "object[]",
              "required": true,
              "description": "Metadata surrounding the potential inappropriate fragments of the message.",
              "fields": {
                "text": {
                  "type": "string",
                  "required": true,
                  "description": "Message text in a fragment."
                },
                "emote": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the emote.",
                  "fields": {
                    "id": {
                      "type": "string",
                      "required": true,
                      "description": "An ID that uniquely identifies this emote."
                    },
                    "emote_set_id": {
                      "type": "string",
                      "required": true,
                      "description": "An ID that identifies the emote set that the emote belongs to."
                    }
                  }
                },
                "cheermote": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the cheermote.",
                  "fields": {
                    "prefix": {
                      "type": "string",
                      "required": true,
                      "description": "The name portion of the Cheermote string that you use in chat to cheer Bits. The full Cheermote string is the concatenation of {prefix} + {number of Bits}."
                    },
                    "bits": {
                      "type": "number",
                      "required": true,
                      "description": "The amount of Bits cheered."
                    },
                    "tier": {
                      "type": "number",
                      "required": true,
                      "description": "The tier level of the cheermote."
                    }
                  }
                }
              }
            }
          }
        },
        "category": {
          "type": "string",
          "required": true,
          "description": "The category of the message."
        },
        "level": {
          "type": "number",
          "required": true,
          "description": "The level of severity. Measured between 1 to 4."
        },
        "status": {
          "type": "string",
          "required": true,
          "description": "The message's status. Possible values are:\n- Approved\n- Denied\n- Expired"
        },
        "held_at": {
          "type": "string",
          "required": true,
          "description": "The timestamp of when automod saved the message."
        }
      }
    }
  },
  "automod.settings.update@1": {
    "id": "automod.settings.update@1",
    "label": "Automod Settings Update",
    "type": "automod.settings.update",
    "version": "1",
    "primary": true,
    "scopes": ["moderator:read:automod"],
    "description": "the broadcaster's automod settings are updated.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the broadcaster (channel). Maximum:1."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the moderator."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster specified in the request."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the broadcaster specified in the request."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the broadcaster specified in the request."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the moderator who changed the channel settings."
        },
        "moderator_user_login": {
          "type": "string",
          "required": true,
          "description": "The moderator's login."
        },
        "moderator_user_name": {
          "type": "string",
          "required": true,
          "description": "The moderator's user name."
        },
        "bullying": {
          "type": "number",
          "required": true,
          "description": "The Automod level for hostility involving name calling or insults."
        },
        "overall_level": {
          "type": "number",
          "required": true,
          "description": "The default AutoMod level for the broadcaster. This field is null if the broadcaster has set one or more of the individual settings."
        },
        "disability": {
          "type": "number",
          "required": true,
          "description": "The Automod level for discrimination against disability."
        },
        "race_ethnicity_or_religion": {
          "type": "number",
          "required": true,
          "description": "The Automod level for racial discrimination."
        },
        "misogyny": {
          "type": "number",
          "required": true,
          "description": "The Automod level for discrimination against women."
        },
        "sexuality_sex_or_gender": {
          "type": "number",
          "required": true,
          "description": "The AutoMod level for discrimination based on sexuality, sex, or gender."
        },
        "aggression": {
          "type": "number",
          "required": true,
          "description": "The Automod level for hostility involving aggression."
        },
        "sex_based_terms": {
          "type": "number",
          "required": true,
          "description": "The Automod level for sexual content."
        },
        "swearing": {
          "type": "number",
          "required": true,
          "description": "The Automod level for profanity."
        }
      }
    }
  },
  "automod.terms.update@1": {
    "id": "automod.terms.update@1",
    "label": "Automod Terms Update",
    "type": "automod.terms.update",
    "version": "1",
    "primary": true,
    "scopes": ["moderator:manage:automod"],
    "description": "the broadcaster's automod terms are updated. Changes to private terms are not sent.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the broadcaster (channel). Maximum:1."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the moderator creating the subscription. Maximum:1"
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster specified in the request."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the broadcaster specified in the request."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the broadcaster specified in the request."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the moderator who changed the channel settings."
        },
        "moderator_user_login": {
          "type": "string",
          "required": true,
          "description": "The moderator's login."
        },
        "moderator_user_name": {
          "type": "string",
          "required": true,
          "description": "The moderator's user name."
        },
        "action": {
          "type": "string",
          "required": true,
          "description": "The status change applied to the terms. Possible options are:\n- add_permitted\n- remove_permitted\n- add_blocked\n- remove_blocked"
        },
        "from_automod": {
          "type": "boolean",
          "required": true,
          "description": "Indicates whether this term was added due to an Automod message approve/deny action."
        },
        "terms": {
          "type": "string[]",
          "required": true,
          "description": "The list of terms that had a status change."
        }
      }
    }
  },
  "channel.bits.use@1": {
    "id": "channel.bits.use@1",
    "label": "Channel Bits Use",
    "type": "channel.bits.use",
    "version": "1",
    "primary": true,
    "scopes": ["bits:read"],
    "description": "Bits are used on a channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the channel broadcaster. Maximum: 1."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the channel where the Bits were redeemed."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the channel where the Bits were used."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the channel where the Bits were used."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the redeeming user."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The login name of the redeeming user."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the redeeming user."
        },
        "bits": {
          "type": "number",
          "required": true,
          "description": "The number of Bits used."
        },
        "type": {
          "type": "string",
          "required": true,
          "description": "Possible values are:\n- cheer\n- power_up"
        },
        "message": {
          "type": "object",
          "required": false,
          "description": "An object that contains the user message and emote information needed to recreate the message.",
          "fields": {
            "text": {
              "type": "string",
              "required": true,
              "description": "The chat message in plain text."
            },
            "fragments": {
              "type": "object[]",
              "required": true,
              "description": "The ordered list of chat message fragments.",
              "fields": {
                "text": {
                  "type": "string",
                  "required": true,
                  "description": "The message text in fragment."
                },
                "type": {
                  "type": "string",
                  "required": true,
                  "description": "The type of message fragment. Possible values are:\n- text\n- cheermote\n- emote"
                },
                "emote": {
                  "type": "object",
                  "required": false,
                  "description": "The metadata pertaining to the emote.",
                  "fields": {
                    "id": {
                      "type": "string",
                      "required": true,
                      "description": "The ID that uniquely identifies this emote."
                    },
                    "emote_set_id": {
                      "type": "string",
                      "required": true,
                      "description": "The ID that identifies the emote set that the emote belongs to."
                    },
                    "owner_id": {
                      "type": "string",
                      "required": true,
                      "description": "The ID of the broadcaster who owns the emote."
                    },
                    "format": {
                      "type": "string[]",
                      "required": true,
                      "description": "The formats that the emote is available in.\n- animated - An animated GIF is available for this emote.\n- static - A static PNG file is available for this emote."
                    }
                  }
                },
                "cheermote": {
                  "type": "object",
                  "required": false,
                  "description": "The metadata pertaining to the cheermote.",
                  "fields": {
                    "prefix": {
                      "type": "string",
                      "required": true,
                      "description": "The name portion of the Cheermote string that you use in chat to cheer Bits. The full Cheermote string is the concatenation of {prefix} + {number of Bits}."
                    },
                    "bits": {
                      "type": "number",
                      "required": true,
                      "description": "The amount of Bits cheered."
                    },
                    "tier": {
                      "type": "number",
                      "required": true,
                      "description": "The tier level of the cheermote."
                    }
                  }
                }
              }
            }
          }
        },
        "power_up": {
          "type": "object",
          "required": false,
          "description": "Data about Power-up.",
          "fields": {
            "type": {
              "type": "string",
              "required": true,
              "description": "Possible values:\n- message_effect\n- celebration\n- gigantify_an_emote"
            },
            "emote": {
              "type": "object",
              "required": false,
              "description": "Emote associated with the reward.",
              "fields": {
                "id": {
                  "type": "string",
                  "required": true,
                  "description": "The ID that uniquely identifies this emote."
                },
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "The human readable emote token."
                }
              }
            },
            "message_effect_id": {
              "type": "string",
              "required": false,
              "description": "The ID of the message effect."
            }
          }
        }
      }
    }
  },
  "channel.update@2": {
    "id": "channel.update@2",
    "label": "Channel Update",
    "type": "channel.update",
    "version": "2",
    "primary": true,
    "scopes": [],
    "description": "the broadcaster updates their channel properties e.g., category, title, content classification labels, broadcast, or language.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID for the channel you want to get updates for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's user ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's user login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's user display name."
        },
        "title": {
          "type": "string",
          "required": true,
          "description": "The channel's stream title."
        },
        "language": {
          "type": "string",
          "required": true,
          "description": "The channel's broadcast language."
        },
        "category_id": {
          "type": "string",
          "required": true,
          "description": "The channel's category ID."
        },
        "category_name": {
          "type": "string",
          "required": true,
          "description": "The category name."
        },
        "content_classification_labels": {
          "type": "string[]",
          "required": true,
          "description": "Array of content classification label IDs currently applied on the Channel. To retrieve a list of all possible IDs, use the \"Get Content Classification Labels\" API endpoint."
        }
      }
    }
  },
  "channel.follow@2": {
    "id": "channel.follow@2",
    "label": "Channel Follow",
    "type": "channel.follow",
    "version": "2",
    "primary": true,
    "scopes": ["moderator:read:followers"],
    "description": "the specified channel receives a follow.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID for the channel you want to get follow notifications for."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the moderator of the channel you want to get follow notifications for. If you have authorization from the broadcaster rather than a moderator, specify the broadcaster's user ID here."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID for the user now following the specified channel."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The user login for the user now following the specified channel."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The user display name for the user now following the specified channel."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "followed_at": {
          "type": "string",
          "required": true,
          "description": "RFC3339 timestamp of when the follow occurred."
        }
      }
    }
  },
  "channel.ad_break.begin@1": {
    "id": "channel.ad_break.begin@1",
    "label": "Channel Ad Break Begin",
    "type": "channel.ad_break.begin",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:ads"],
    "description": "a midroll commercial break has started running.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster that you want to get Channel Ad Break begin notifications for. Maximum: 1"
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "duration_seconds": {
          "type": "number",
          "required": true,
          "description": "Length in seconds of the mid-roll ad break requested"
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The UTC timestamp of when the ad break began, in RFC3339 format. Note that there is potential delay between this event, when the streamer requested the ad break, and when the viewers will see ads."
        },
        "is_automatic": {
          "type": "boolean",
          "required": true,
          "description": "Indicates if the ad was automatically scheduled via Ads Manager"
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's user ID for the channel the ad was run on."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's user login for the channel the ad was run on."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's user display name for the channel the ad was run on."
        },
        "requester_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the user that requested the ad. For automatic ads, this will be the ID of the broadcaster."
        },
        "requester_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the user that requested the ad."
        },
        "requester_user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the user that requested the ad."
        }
      }
    }
  },
  "channel.chat.clear@1": {
    "id": "channel.chat.clear@1",
    "label": "Channel Chat Clear",
    "type": "channel.chat.clear",
    "version": "1",
    "primary": true,
    "scopes": ["user:read:chat"],
    "description": "a moderator or bot has cleared all messages from the chat room.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the channel to receive chat clear events for."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID to read chat as."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster display name."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster login."
        }
      }
    }
  },
  "channel.chat.clear_user_messages@1": {
    "id": "channel.chat.clear_user_messages@1",
    "label": "Channel Chat Clear User Messages",
    "type": "channel.chat.clear_user_messages",
    "version": "1",
    "primary": true,
    "scopes": ["user:read:chat"],
    "description": "a moderator or bot has cleared all messages from a specific user.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the channel to receive chat clear user messages events for."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID to read chat as."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster display name."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster login."
        },
        "target_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the user that was banned or put in a timeout. All of their messages are deleted."
        },
        "target_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the user that was banned or put in a timeout."
        },
        "target_user_login": {
          "type": "string",
          "required": true,
          "description": "The user login of the user that was banned or put in a timeout."
        }
      }
    }
  },
  "channel.chat.message@1": {
    "id": "channel.chat.message@1",
    "label": "Channel Chat Message",
    "type": "channel.chat.message",
    "version": "1",
    "primary": true,
    "scopes": ["user:read:chat"],
    "description": "a user sends a message to a specific chat room.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the channel to receive chat message events for."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID to read chat as."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster display name."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster login."
        },
        "chatter_user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the user that sent the message."
        },
        "chatter_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the user that sent the message."
        },
        "chatter_user_login": {
          "type": "string",
          "required": true,
          "description": "The user login of the user that sent the message."
        },
        "message_id": {
          "type": "string",
          "required": true,
          "description": "A UUID that identifies the message."
        },
        "message": {
          "type": "object",
          "required": true,
          "description": "The structured chat message.",
          "fields": {
            "text": {
              "type": "string",
              "required": true,
              "description": "The chat message in plain text."
            },
            "fragments": {
              "type": "object[]",
              "required": true,
              "description": "Ordered list of chat message fragments.",
              "fields": {
                "type": {
                  "type": "string",
                  "required": true,
                  "description": "The type of message fragment. Possible values:\n- text\n- cheermote\n- emote\n- mention"
                },
                "text": {
                  "type": "string",
                  "required": true,
                  "description": "Message text in fragment."
                },
                "cheermote": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the cheermote.",
                  "fields": {
                    "prefix": {
                      "type": "string",
                      "required": true,
                      "description": "The name portion of the Cheermote string that you use in chat to cheer Bits. The full Cheermote string is the concatenation of {prefix} + {number of Bits}."
                    },
                    "bits": {
                      "type": "number",
                      "required": true,
                      "description": "The amount of Bits cheered."
                    },
                    "tier": {
                      "type": "number",
                      "required": true,
                      "description": "The tier level of the cheermote."
                    }
                  }
                },
                "emote": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the emote.",
                  "fields": {
                    "id": {
                      "type": "string",
                      "required": true,
                      "description": "An ID that uniquely identifies this emote."
                    },
                    "emote_set_id": {
                      "type": "string",
                      "required": true,
                      "description": "An ID that identifies the emote set that the emote belongs to."
                    },
                    "owner_id": {
                      "type": "string",
                      "required": true,
                      "description": "The ID of the broadcaster who owns the emote."
                    },
                    "format": {
                      "type": "string[]",
                      "required": true,
                      "description": "The formats that the emote is available in.\n- animated - An animated GIF is available for this emote.\n- static - A static PNG file is available for this emote."
                    }
                  }
                },
                "mention": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the mention.",
                  "fields": {
                    "user_id": {
                      "type": "string",
                      "required": true,
                      "description": "The user ID of the mentioned user."
                    },
                    "user_name": {
                      "type": "string",
                      "required": true,
                      "description": "The user name of the mentioned user."
                    },
                    "user_login": {
                      "type": "string",
                      "required": true,
                      "description": "The user login of the mentioned user."
                    }
                  }
                }
              }
            }
          }
        },
        "message_type": {
          "type": "string",
          "required": true,
          "description": "The type of message. Possible values: <ul><li>text</li><li>channel_points_highlighted</li><li>channel_points_sub_only</li><li>user_intro</li><li>power_ups_message_effect</li><li>power_ups_gigantified_emote</li></ul>"
        },
        "badges": {
          "type": "object[]",
          "required": true,
          "description": "List of chat badges.",
          "fields": {
            "set_id": {
              "type": "string",
              "required": true,
              "description": "An ID that identifies this set of chat badges."
            },
            "id": {
              "type": "string",
              "required": true,
              "description": "An ID that identifies this version of the badge. The ID can be any value."
            },
            "info": {
              "type": "string",
              "required": true,
              "description": "Contains metadata related to the chat badges in the badges tag. Currently, this tag contains metadata only for subscriber badges, to indicate the number of months the user has been a subscriber."
            }
          }
        },
        "cheer": {
          "type": "object",
          "required": false,
          "description": "Metadata if this message is a cheer.",
          "fields": {
            "bits": {
              "type": "number",
              "required": true,
              "description": "The amount of Bits the user cheered."
            }
          }
        },
        "color": {
          "type": "string",
          "required": true,
          "description": "The color of the user's name in the chat room. This is a hexadecimal RGB color code in the form, #&lt;RGB&gt;. This tag may be empty if it is never set."
        },
        "reply": {
          "type": "object",
          "required": false,
          "description": "Metadata if this message is a reply.",
          "fields": {
            "parent_message_id": {
              "type": "string",
              "required": true,
              "description": "An ID that uniquely identifies the parent message that this message is replying to."
            },
            "parent_message_body": {
              "type": "string",
              "required": true,
              "description": "The message body of the parent message."
            },
            "parent_user_id": {
              "type": "string",
              "required": true,
              "description": "User ID of the sender of the parent message."
            },
            "parent_user_name": {
              "type": "string",
              "required": true,
              "description": "User name of the sender of the parent message."
            },
            "parent_user_login": {
              "type": "string",
              "required": true,
              "description": "User login of the sender of the parent message."
            },
            "thread_message_id": {
              "type": "string",
              "required": true,
              "description": "An ID that identifies the parent message of the reply thread."
            },
            "thread_user_id": {
              "type": "string",
              "required": true,
              "description": "User ID of the sender of the thread's parent message."
            },
            "thread_user_name": {
              "type": "string",
              "required": true,
              "description": "User name of the sender of the thread's parent message."
            },
            "thread_user_login": {
              "type": "string",
              "required": true,
              "description": "User login of the sender of the thread's parent message."
            }
          }
        },
        "channel_points_custom_reward_id": {
          "type": "string",
          "required": false,
          "description": "The ID of a channel points custom reward that was redeemed."
        },
        "source_broadcaster_user_id": {
          "type": "string",
          "required": false,
          "description": "The broadcaster user ID of the channel the message was sent from. Is null when the message happens in the same channel as the broadcaster. Is not null when in a shared chat session, and the action happens in the channel of a participant other than the broadcaster."
        },
        "source_broadcaster_user_name": {
          "type": "string",
          "required": false,
          "description": "The user name of the broadcaster of the channel the message was sent from. Is null when the message happens in the same channel as the broadcaster. Is not null when in a shared chat session, and the action happens in the channel of a participant other than the broadcaster."
        },
        "source_broadcaster_user_login": {
          "type": "string",
          "required": false,
          "description": "The login of the broadcaster of the channel the message was sent from. Is null when the message happens in the same channel as the broadcaster. Is not null when in a shared chat session, and the action happens in the channel of a participant other than the broadcaster."
        },
        "source_message_id": {
          "type": "string",
          "required": false,
          "description": "The UUID that identifies the source message from the channel the message was sent from. Is null when the message happens in the same channel as the broadcaster. Is not null when in a shared chat session, and the action happens in the channel of a participant other than the broadcaster."
        },
        "source_badges": {
          "type": "object",
          "required": false,
          "description": "The list of chat badges for the chatter in the channel the message was sent from. Is null when the message happens in the same channel as the broadcaster. Is not null when in a shared chat session, and the action happens in the channel of a participant other than the broadcaster.",
          "fields": {
            "set_id": {
              "type": "string",
              "required": true,
              "description": "The ID that identifies this set of chat badges."
            },
            "id": {
              "type": "string",
              "required": true,
              "description": "The ID that identifies this version of the badge. The ID can be any value."
            },
            "info": {
              "type": "string",
              "required": true,
              "description": "Contains metadata related to the chat badges in the badges tag. Currently, this tag contains metadata only for subscriber badges, to indicate the number of months the user has been a subscriber."
            }
          }
        },
        "is_source_only": {
          "type": "boolean",
          "required": false,
          "description": "Determines if a message delivered during a shared chat session is only sent to the source channel. Has no effect if the message is not sent during a shared chat session."
        }
      }
    }
  },
  "channel.chat.message_delete@1": {
    "id": "channel.chat.message_delete@1",
    "label": "Channel Chat Message Delete",
    "type": "channel.chat.message_delete",
    "version": "1",
    "primary": true,
    "scopes": ["user:read:chat"],
    "description": "a moderator has removed a specific message.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the channel to receive chat message delete events for."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID to read chat as."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster display name."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster login."
        },
        "target_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the user whose message was deleted."
        },
        "target_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the user whose message was deleted."
        },
        "target_user_login": {
          "type": "string",
          "required": true,
          "description": "The user login of the user whose message was deleted."
        },
        "message_id": {
          "type": "string",
          "required": true,
          "description": "A UUID that identifies the message that was removed."
        }
      }
    }
  },
  "channel.chat.notification@1": {
    "id": "channel.chat.notification@1",
    "label": "Channel Chat Notification",
    "type": "channel.chat.notification",
    "version": "1",
    "primary": true,
    "scopes": ["user:read:chat"],
    "description": "an event that appears in chat has occurred.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the channel to receive chat notification events for."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID to read chat as."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster display name."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster login."
        },
        "chatter_user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the user that sent the message."
        },
        "chatter_user_name": {
          "type": "string",
          "required": true,
          "description": "The user login of the user that sent the message."
        },
        "chatter_is_anonymous": {
          "type": "boolean",
          "required": true,
          "description": "Whether or not the chatter is anonymous."
        },
        "color": {
          "type": "string",
          "required": true,
          "description": "The color of the user's name in the chat room."
        },
        "badges": {
          "type": "object[]",
          "required": true,
          "description": "The color of the user's name in the chat room.",
          "fields": {
            "set_id": {
              "type": "string",
              "required": true,
              "description": "An ID that identifies this set of chat badges."
            },
            "id": {
              "type": "string",
              "required": true,
              "description": "An ID that identifies this version of the badge. The ID can be any value."
            },
            "info": {
              "type": "string",
              "required": true,
              "description": "Contains metadata related to the chat badges in the badges tag. Currently, this tag contains metadata only for subscriber badges, to indicate the number of months the user has been a subscriber."
            }
          }
        },
        "system_message": {
          "type": "string",
          "required": true,
          "description": "The message Twitch shows in the chat room for this notice."
        },
        "message_id": {
          "type": "string",
          "required": true,
          "description": "A UUID that identifies the message."
        },
        "message": {
          "type": "object",
          "required": true,
          "description": "The structured chat message.",
          "fields": {
            "text": {
              "type": "object",
              "required": true,
              "description": "The chat message in plain text."
            },
            "fragments": {
              "type": "object[]",
              "required": true,
              "description": "Ordered list of chat message fragments.",
              "fields": {
                "type": {
                  "type": "string",
                  "required": true,
                  "description": "The type of message fragment. Possible values:\n- text\n- cheermote\n- emote\n- mention"
                },
                "text": {
                  "type": "string",
                  "required": true,
                  "description": "Message text in fragment."
                },
                "cheermote": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the cheermote.",
                  "fields": {
                    "prefix": {
                      "type": "object",
                      "required": true,
                      "description": "The name portion of the Cheermote string that you use in chat to cheer Bits. The full Cheermote string is the concatenation of {prefix} + {number of Bits}."
                    },
                    "bits": {
                      "type": "number",
                      "required": true,
                      "description": "The amount of Bits cheered."
                    },
                    "tier": {
                      "type": "number",
                      "required": true,
                      "description": "The tier level of the cheermote."
                    }
                  }
                },
                "emote": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the emote.",
                  "fields": {
                    "id": {
                      "type": "string",
                      "required": true,
                      "description": "An ID that uniquely identifies this emote."
                    },
                    "emote_set_id": {
                      "type": "string",
                      "required": true,
                      "description": "An ID that identifies the emote set that the emote belongs to."
                    },
                    "owner_id": {
                      "type": "string",
                      "required": true,
                      "description": "The ID of the broadcaster who owns the emote."
                    },
                    "format": {
                      "type": "string[]",
                      "required": true,
                      "description": "The formats that the emote is available in.\n- animated - An animated GIF is available for this emote.\n- static - A static PNG file is available for this emote."
                    }
                  }
                },
                "mention": {
                  "type": "object",
                  "required": false,
                  "description": " Metadata pertaining to the mention.",
                  "fields": {
                    "user_id": {
                      "type": "string",
                      "required": true,
                      "description": "The user ID of the mentioned user."
                    },
                    "user_name": {
                      "type": "string",
                      "required": true,
                      "description": "The user name of the mentioned user."
                    },
                    "user_login": {
                      "type": "string",
                      "required": true,
                      "description": "The user login of the mentioned user."
                    }
                  }
                }
              }
            }
          }
        },
        "notice_type": {
          "type": "string",
          "required": true,
          "description": "The type of notice. Possible values are:\n- sub\n- resub\n- sub_gift\n- community_sub_gift\n- gift_paid_upgrade\n- prime_paid_upgrade\n- raid\n- unraid\n- pay_it_forward\n- announcement\n- bits_badge_tier\n- charity_donation\n- shared_chat_sub\n- shared_chat_resub\n- shared_chat_sub_gift\n- shared_chat_community_sub_gift\n- shared_chat_gift_paid_upgrade\n- shared_chat_prime_paid_upgrade\n- shared_chat_raid\n- shared_chat_pay_it_forward\n- shared_chat_announcement"
        },
        "sub": {
          "type": "object",
          "required": true,
          "description": "Information about the sub event. Null if notice_type is not sub.",
          "fields": {
            "sub_tier": {
              "type": "string",
              "required": true,
              "description": "The type of subscription plan being used. Possible values are:\n- 1000 - First level of paid or Prime subscription.\n- 2000 - Second level of paid subscription.\n- 3000 - Third level of paid subscription."
            },
            "is_prime": {
              "type": "boolean",
              "required": true,
              "description": "Indicates if the subscription was obtained through Amazon Prime."
            },
            "duration_months": {
              "type": "number",
              "required": true,
              "description": "The number of months the subscription is for."
            }
          }
        },
        "resub": {
          "type": "object",
          "required": true,
          "description": "Information about the resub event. Null if notice_type is not resub.",
          "fields": {
            "cumulative_months": {
              "type": "number",
              "required": true,
              "description": "The total number of months the user has subscribed."
            },
            "duration_months": {
              "type": "number",
              "required": true,
              "description": "The number of months the subscription is for."
            },
            "streak_months": {
              "type": "number",
              "required": true,
              "description": "The total number of months the user has subscribed."
            },
            "sub_tier": {
              "type": "string",
              "required": true,
              "description": "The type of subscription plan being used. Possible values are:\n- 1000 - First level of paid or Prime subscription.\n- 2000 - Second level of paid subscription.\n- 3000 - Third level of paid subscription."
            },
            "is_prime": {
              "type": "boolean",
              "required": false,
              "description": "The number of consecutive months the user has subscribed."
            },
            "is_gift": {
              "type": "boolean",
              "required": true,
              "description": "Whether or not the resub was a result of a gift."
            },
            "gifter_is_anonymous": {
              "type": "boolean",
              "required": false,
              "description": "Whether or not the gift was anonymous."
            },
            "gifter_user_id": {
              "type": "string",
              "required": true,
              "description": "The user ID of the subscription gifter. Null if anonymous."
            },
            "gifter_user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the subscription gifter. Null if anonymous."
            },
            "gifter_user_login": {
              "type": "string",
              "required": false,
              "description": "The user login of the subscription gifter. Null if anonymous."
            }
          }
        },
        "sub_gift": {
          "type": "object",
          "required": true,
          "description": "Information about the gift sub event. Null if notice_type is not sub_gift.",
          "fields": {
            "duration_months": {
              "type": "number",
              "required": true,
              "description": "The number of months the subscription is for."
            },
            "cumulative_total": {
              "type": "number",
              "required": false,
              "description": "The amount of gifts the gifter has given in this channel. Null if anonymous."
            },
            "recipient_user_id": {
              "type": "string",
              "required": true,
              "description": "The user ID of the subscription gift recipient."
            },
            "recipient_user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the subscription gift recipient."
            },
            "recipient_user_login": {
              "type": "string",
              "required": true,
              "description": "The user login of the subscription gift recipient."
            },
            "sub_tier": {
              "type": "string",
              "required": true,
              "description": "The type of subscription plan being used. Possible values are:\n- 1000 - First level of paid or Prime subscription.\n- 2000 - Second level of paid subscription.\n- 3000 - Third level of paid subscription."
            },
            "community_gift_id": {
              "type": "string",
              "required": false,
              "description": "The ID of the associated community gift. Null if not associated with a community gift."
            }
          }
        },
        "community_sub_gift": {
          "type": "object",
          "required": true,
          "description": "Information about the community gift sub event. Null if notice_type is not community_sub_gift.",
          "fields": {
            "id": {
              "type": "string",
              "required": true,
              "description": "The ID of the associated community gift."
            },
            "total": {
              "type": "number",
              "required": true,
              "description": "Number of subscriptions being gifted."
            },
            "sub_tier": {
              "type": "string",
              "required": true,
              "description": "The type of subscription plan being used. Possible values are: <ul><li>1000 - First level of paid or Prime subscription.</li><li>2000 - Second level of paid subscription.</li><li>3000 - Third level of paid subscription.</li></ul>"
            },
            "cumulative_total": {
              "type": "number",
              "required": false,
              "description": "The amount of gifts the gifter has given in this channel. Null if anonymous."
            }
          }
        },
        "gift_paid_upgrade": {
          "type": "object",
          "required": true,
          "description": "Information about the community gift paid upgrade event. Null if notice_type is not gift_paid_upgrade.",
          "fields": {
            "gifter_is_anonymous": {
              "type": "boolean",
              "required": true,
              "description": "Whether the gift was given anonymously."
            },
            "gifter_user_id": {
              "type": "string",
              "required": false,
              "description": "The user ID of the user who gifted the subscription. Null if anonymous."
            },
            "gifter_user_name": {
              "type": "string",
              "required": false,
              "description": "The user name of the user who gifted the subscription. Null if anonymous."
            }
          }
        },
        "prime_paid_upgrade": {
          "type": "object",
          "required": true,
          "description": "Information about the Prime gift paid upgrade event. Null if notice_type is not prime_paid_upgrade",
          "fields": {
            "sub_tier": {
              "type": "string",
              "required": true,
              "description": "The type of subscription plan being used. Possible values are:\n- 1000 - First level of paid or Prime subscription.\n- 2000 - Second level of paid subscription.\n- 3000 - Third level of paid subscription."
            }
          }
        },
        "pay_it_forward": {
          "type": "object",
          "required": true,
          "description": "Information about the pay it forward event. Null if notice_type is not pay_it_forward",
          "fields": {
            "gifter_is_anonymous": {
              "type": "boolean",
              "required": true,
              "description": "Whether the gift was given anonymously."
            },
            "gifter_user_id": {
              "type": "string",
              "required": true,
              "description": "The user ID of the user who gifted the subscription. Null if anonymous."
            },
            "gifter_user_name": {
              "type": "string",
              "required": false,
              "description": "The user name of the user who gifted the subscription. Null if anonymous."
            },
            "gifter_user_login": {
              "type": "string",
              "required": true,
              "description": "The user login of the user who gifted the subscription. Null if anonymous."
            }
          }
        },
        "raid": {
          "type": "object",
          "required": true,
          "description": "Information about the raid event. Null if notice_type is not raid",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The user ID of the broadcaster raiding this channel."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the broadcaster raiding this channel."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login name of the broadcaster raiding this channel."
            },
            "viewer_count": {
              "type": "number",
              "required": true,
              "description": "The number of viewers raiding this channel from the broadcaster's channel."
            },
            "profile_image_url": {
              "type": "string",
              "required": true,
              "description": "Profile image URL of the broadcaster raiding this channel."
            }
          }
        },
        "unraid": {
          "type": "object",
          "required": true,
          "description": "Returns an empty payload if notice_type is not unraid, otherwise returns null."
        },
        "announcement": {
          "type": "object",
          "required": true,
          "description": "Information about the announcement event. Null if notice_type is not {::nomarkdown} announcement",
          "fields": {
            "color": {
              "type": "string",
              "required": true,
              "description": "Color of the announcement."
            }
          }
        },
        "bits_badge_tier": {
          "type": "object",
          "required": true,
          "description": "Information about the Bits badge tier event. Null if notice_type is not bits_badge_tier",
          "fields": {
            "tier": {
              "type": "number",
              "required": true,
              "description": "The tier of the Bits badge the user just earned."
            }
          }
        },
        "charity_donation": {
          "type": "object",
          "required": true,
          "description": "Information about the announcement event. Null if notice_type is not charity_donation",
          "fields": {
            "charity_name": {
              "type": "string",
              "required": true,
              "description": "Name of the charity."
            },
            "amount": {
              "type": "object",
              "required": true,
              "description": "An object that contains the amount of money that the user paid.",
              "fields": {
                "value": {
                  "type": "number",
                  "required": true,
                  "description": "The monetary amount. The amount is specified in the currency's minor unit."
                },
                "decimal_place": {
                  "type": "number",
                  "required": true,
                  "description": "The number of decimal places used by the currency."
                },
                "currency": {
                  "type": "string",
                  "required": true,
                  "description": "The ISO-4217 three-letter currency code that identifies the type of currency in value."
                }
              }
            }
          }
        },
        "source_broadcaster_user_id": {
          "type": "string",
          "required": false,
          "description": "The broadcaster user ID of the channel the message was sent from. Is null when the message notification happens in the same channel as the broadcaster. Is not null when in a shared chat session, and the action happens in the channel of a participant other than the broadcaster."
        },
        "source_broadcaster_user_name": {
          "type": "string",
          "required": false,
          "description": "The user name of the broadcaster of the channel the message was sent from. Is null when the message notification happens in the same channel as the broadcaster. Is not null when in a shared chat session, and the action happens in the channel of a participant other than the broadcaster."
        },
        "source_broadcaster_user_login": {
          "type": "string",
          "required": false,
          "description": "The login of the broadcaster of the channel the message was sent from. Is null when the message notification happens in the same channel as the broadcaster. Is not null when in a shared chat session, and the action happens in the channel of a participant other than the broadcaster."
        },
        "source_message_id": {
          "type": "string",
          "required": false,
          "description": "The UUID that identifies the source message from the channel the message was sent from. Is null when the message happens in the same channel as the broadcaster. Is not null when in a shared chat session, and the action happens in the channel of a participant other than the broadcaster."
        },
        "source_badges": {
          "type": "object",
          "required": false,
          "description": "The list of chat badges for the chatter in the channel the message was sent from. Is null when the message happens in the same channel as the broadcaster. Is not null when in a shared chat session, and the action happens in the channel of a participant other than the broadcaster.",
          "fields": {
            "set_id": {
              "type": "string",
              "required": true,
              "description": "The ID that identifies this set of chat badges."
            },
            "id": {
              "type": "string",
              "required": true,
              "description": "The ID that identifies this version of the badge. The ID can be any value."
            },
            "info": {
              "type": "string",
              "required": true,
              "description": "Contains metadata related to the chat badges in the badges tag. Currently, this tag contains metadata only for subscriber badges, to indicate the number of months the user has been a subscriber."
            }
          }
        },
        "shared_chat_sub": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_sub event. Is null if notice_type is not shared_chat_sub . This field has the same information as the sub field but for a notice that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        },
        "shared_chat_resub": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_resub event. Is null if notice_type is not shared_chat_resub . This field has the same information as the resub field but for a notice that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        },
        "shared_chat_sub_gift": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_sub_gift event. Is null if notice_type is not shared_chat_sub_gift . This field has the same information as the chat_sub_gift field but for a notice that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        },
        "shared_chat_community_sub_gift": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_community_sub_gift event. Is null if notice_type is not shared_chat_community_sub_gift . This field has the same information as the community_sub_gift field but for a notice that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        },
        "shared_chat_gift_paid_upgrade": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_gift_paid_upgrade event. Is null if notice_type is not shared_chat_gift_paid_upgrade . This field has the same information as the gift_paid_upgrade field but for a notice that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        },
        "shared_chat_prime_paid_upgrade": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_chat_prime_paid_upgrade event. Is null if notice_type is not shared_chat_prime_paid_upgrade . This field has the same information as the prime_paid_upgrade field but for a notice that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        },
        "shared_chat_pay_it_forward": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_pay_it_forward event. Is null if notice_type is not shared_chat_pay_it_forward . This field has the same information as the pay_it_forward field but for a notice that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        },
        "shared_chat_raid": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_raid event. Is null if notice_type is not shared_chat_raid . This field has the same information as the raid field but for a notice that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        },
        "shared_chat_announcement": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_announcement event. Is null if notice_type is not shared_chat_announcement . This field has the same information as the announcement field but for a notice that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        }
      }
    }
  },
  "channel.chat_settings.update@1": {
    "id": "channel.chat_settings.update@1",
    "label": "Channel Chat Settings Update",
    "type": "channel.chat_settings.update",
    "version": "1",
    "primary": true,
    "scopes": ["user:read:chat"],
    "description": "the broadcaster's chat settings are updated.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the channel to receive chat settings update events for."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID to read chat as."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster specified in the request."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the broadcaster specified in the request."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the broadcaster specified in the request."
        },
        "emote_mode": {
          "type": "boolean",
          "required": true,
          "description": "A Boolean value that determines whether chat messages must contain only emotes. True if only messages that are 100% emotes are allowed; otherwise false."
        },
        "follower_mode": {
          "type": "boolean",
          "required": true,
          "description": "A Boolean value that determines whether the broadcaster restricts the chat room to followers only, based on how long they've followed.\n\nTrue if the broadcaster restricts the chat room to followers only; otherwise false.\n\nSee follower_mode_duration_minutes for how long the followers must have followed the broadcaster to participate in the chat room."
        },
        "follower_mode_duration_minutes": {
          "type": "number",
          "required": true,
          "description": "The length of time, in minutes, that the followers must have followed the broadcaster to participate in the chat room. See follower_mode.\n\nNull if follower_mode is false."
        },
        "slow_mode": {
          "type": "boolean",
          "required": true,
          "description": "A Boolean value that determines whether the broadcaster limits how often users in the chat room are allowed to send messages.\n\nIs true, if the broadcaster applies a delay; otherwise, false.\n\nSee slow_mode_wait_time_seconds for the delay."
        },
        "slow_mode_wait_time_seconds": {
          "type": "number",
          "required": true,
          "description": "The amount of time, in seconds, that users need to wait between sending messages. See slow_mode.\n\nNull if slow_mode is false."
        },
        "subscriber_mode": {
          "type": "boolean",
          "required": true,
          "description": "A Boolean value that determines whether only users that subscribe to the broadcaster's channel can talk in the chat room.\n\nTrue if the broadcaster restricts the chat room to subscribers only; otherwise false."
        },
        "unique_chat_mode": {
          "type": "boolean",
          "required": true,
          "description": "A Boolean value that determines whether the broadcaster requires users to post only unique messages in the chat room.\n\nTrue if the broadcaster requires unique messages only; otherwise false."
        }
      }
    }
  },
  "channel.chat.user_message_hold@1": {
    "id": "channel.chat.user_message_hold@1",
    "label": "Channel Chat User Message Hold",
    "type": "channel.chat.user_message_hold",
    "version": "1",
    "primary": true,
    "scopes": ["user:read:chat"],
    "description": "the user's message is caught by automod.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the channel to receive chat message events for."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID to read chat as."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster specified in the request."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the broadcaster specified in the request."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the broadcaster specified in the request."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the message sender."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The message sender's login."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The message sender's display name."
        },
        "message_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the message that was flagged by automod."
        },
        "message": {
          "type": "object",
          "required": true,
          "description": "The body of the message.",
          "fields": {
            "text": {
              "type": "string",
              "required": true,
              "description": "The contents of the message caught by automod."
            },
            "fragments": {
              "type": "object[]",
              "required": true,
              "description": "Ordered list of chat message fragments.",
              "fields": {
                "text": {
                  "type": "string",
                  "required": true,
                  "description": "Message text in a fragment."
                },
                "emote": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the emote.",
                  "fields": {
                    "id": {
                      "type": "string",
                      "required": true,
                      "description": "An ID that uniquely identifies this emote."
                    },
                    "emote_set_id": {
                      "type": "string",
                      "required": true,
                      "description": "An ID that identifies the emote set that the emote belongs to."
                    }
                  }
                },
                "cheermote": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the cheermote.",
                  "fields": {
                    "prefix": {
                      "type": "string",
                      "required": true,
                      "description": "The name portion of the Cheermote string that you use in chat to cheer Bits. The full Cheermote string is the concatenation of {prefix} + {number of Bits}."
                    },
                    "bits": {
                      "type": "number",
                      "required": true,
                      "description": "The amount of Bits cheered."
                    },
                    "tier": {
                      "type": "number",
                      "required": true,
                      "description": "The tier level of the cheermote."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "channel.chat.user_message_update@1": {
    "id": "channel.chat.user_message_update@1",
    "label": "Channel Chat User Message Update",
    "type": "channel.chat.user_message_update",
    "version": "1",
    "primary": true,
    "scopes": ["user:read:chat"],
    "description": "the user's message's automod status is updated.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the channel to receive chat message events for."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID to read chat as."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster specified in the request."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the broadcaster specified in the request."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the broadcaster specified in the request."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the message sender."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The message sender's login."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The message sender's user name."
        },
        "status": {
          "type": "string",
          "required": true,
          "description": "The message's status. Possible values are:\n- approved\n- denied\n- invalid"
        },
        "message_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the message that was flagged by automod."
        },
        "message": {
          "type": "object",
          "required": true,
          "description": "The body of the message.",
          "fields": {
            "text": {
              "type": "string",
              "required": true,
              "description": "The contents of the message caught by automod."
            },
            "fragments": {
              "type": "object[]",
              "required": true,
              "description": "Ordered list of chat message fragments.",
              "fields": {
                "text": {
                  "type": "string",
                  "required": true,
                  "description": "Message text in a fragment."
                },
                "emote": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the emote.",
                  "fields": {
                    "id": {
                      "type": "string",
                      "required": true,
                      "description": "An ID that uniquely identifies this emote."
                    },
                    "emote_set_id": {
                      "type": "string",
                      "required": true,
                      "description": "An ID that identifies the emote set that the emote belongs to."
                    }
                  }
                },
                "cheermote": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the cheermote.",
                  "fields": {
                    "prefix": {
                      "type": "string",
                      "required": true,
                      "description": "The name portion of the Cheermote string that you use in chat to cheer Bits. The full Cheermote string is the concatenation of {prefix} + {number of Bits}."
                    },
                    "bits": {
                      "type": "number",
                      "required": true,
                      "description": "The amount of Bits cheered."
                    },
                    "tier": {
                      "type": "number",
                      "required": true,
                      "description": "The tier level of the cheermote."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "channel.subscribe@1": {
    "id": "channel.subscribe@1",
    "label": "Channel Subscribe",
    "type": "channel.subscribe",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:subscriptions"],
    "description": "the specified channel receives a subscriber. This does not include resubscribes.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID for the channel you want to get subscribe notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID for the user who subscribed to the specified channel."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The user login for the user who subscribed to the specified channel."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The user display name for the user who subscribed to the specified channel."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "tier": {
          "type": "string",
          "required": true,
          "description": "The tier of the subscription. Valid values are 1000, 2000, and 3000."
        },
        "is_gift": {
          "type": "boolean",
          "required": true,
          "description": "Whether the subscription is a gift."
        }
      }
    }
  },
  "channel.subscription.end@1": {
    "id": "channel.subscription.end@1",
    "label": "Channel Subscription End",
    "type": "channel.subscription.end",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:subscriptions"],
    "description": "a subscription to the specified channel ends.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID for the channel you want to get subscription end notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID for the user whose subscription ended."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The user login for the user whose subscription ended."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The user display name for the user whose subscription ended."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster display name."
        },
        "tier": {
          "type": "string",
          "required": true,
          "description": "The tier of the subscription that ended. Valid values are 1000, 2000, and 3000."
        },
        "is_gift": {
          "type": "boolean",
          "required": true,
          "description": "Whether the subscription was a gift."
        }
      }
    }
  },
  "channel.subscription.gift@1": {
    "id": "channel.subscription.gift@1",
    "label": "Channel Subscription Gift",
    "type": "channel.subscription.gift",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:subscriptions"],
    "description": "a viewer gives a gift subscription to one or more users in the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID for the channel you want to get subscription gift notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the user who sent the subscription gift. Set to null if it was an anonymous subscription gift."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The user login of the user who sent the gift. Set to null if it was an anonymous subscription gift."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The user display name of the user who sent the gift. Set to null if it was an anonymous subscription gift."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster display name."
        },
        "total": {
          "type": "number",
          "required": true,
          "description": "The number of subscriptions in the subscription gift."
        },
        "tier": {
          "type": "string",
          "required": true,
          "description": "The tier of subscriptions in the subscription gift."
        },
        "cumulative_total": {
          "type": "number",
          "required": true,
          "description": "The number of subscriptions gifted by this user in the channel. This value is null for anonymous gifts or if the gifter has opted out of sharing this information."
        },
        "is_anonymous": {
          "type": "boolean",
          "required": true,
          "description": "Whether the subscription gift was anonymous."
        }
      }
    }
  },
  "channel.subscription.message@1": {
    "id": "channel.subscription.message@1",
    "label": "Channel Subscription Message",
    "type": "channel.subscription.message",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:subscriptions"],
    "description": "a user sends a resubscription chat message in a specific channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID for the channel you want to get resubscription chat message notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the user who sent a resubscription chat message."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The user login of the user who sent a resubscription chat message."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The user display name of the user who a resubscription chat message."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster display name."
        },
        "tier": {
          "type": "string",
          "required": true,
          "description": "The tier of the user's subscription."
        },
        "message": {
          "type": "object",
          "required": true,
          "description": "An object that contains the resubscription message and emote information needed to recreate the message.",
          "fields": {
            "text": {
              "type": "string",
              "required": true,
              "description": "The text of the resubscription chat message."
            },
            "emotes": {
              "type": "object",
              "required": true,
              "description": "An array that includes the emote ID and start and end positions for where the emote appears in the text.",
              "fields": {
                "begin": {
                  "type": "number",
                  "required": true,
                  "description": "The index of where the Emote starts in the text."
                },
                "end": {
                  "type": "number",
                  "required": true,
                  "description": "The index of where the Emote ends in the text."
                },
                "id": {
                  "type": "string",
                  "required": true,
                  "description": "The emote ID."
                }
              }
            }
          }
        },
        "cumulative_months": {
          "type": "number",
          "required": true,
          "description": "The total number of months the user has been subscribed to the channel."
        },
        "streak_months": {
          "type": "number",
          "required": true,
          "description": "The number of consecutive months the user's current subscription has been active. This value is null if the user has opted out of sharing this information."
        },
        "duration_months": {
          "type": "number",
          "required": true,
          "description": "The month duration of the subscription."
        }
      }
    }
  },
  "channel.cheer@1": {
    "id": "channel.cheer@1",
    "label": "Channel Cheer",
    "type": "channel.cheer",
    "version": "1",
    "primary": true,
    "scopes": ["bits:read"],
    "description": "a user cheers on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID for the channel you want to get cheer notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "is_anonymous": {
          "type": "boolean",
          "required": true,
          "description": "Whether the user cheered anonymously or not."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID for the user who cheered on the specified channel. This is null if is_anonymous is true."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The user login for the user who cheered on the specified channel. This is null if is_anonymous is true."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The user display name for the user who cheered on the specified channel. This is null if is_anonymous is true."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "message": {
          "type": "string",
          "required": true,
          "description": "The message sent with the cheer."
        },
        "bits": {
          "type": "number",
          "required": true,
          "description": "The number of Bits cheered."
        }
      }
    }
  },
  "channel.raid@1": {
    "id": "channel.raid@1",
    "label": "Channel Raid",
    "type": "channel.raid",
    "version": "1",
    "primary": true,
    "scopes": [],
    "description": "the broadcaster raids another broadcaster's channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "from_broadcaster_user_id": {
          "type": "string",
          "required": false,
          "description": "The broadcaster user ID that created the channel raid you want to get notifications for. Use this parameter if you want to know when a specific broadcaster raids another broadcaster. The channel raid condition must include either from_broadcaster_user_id or to_broadcaster_user_id."
        },
        "to_broadcaster_user_id": {
          "type": "string",
          "required": false,
          "description": "The broadcaster user ID that received the channel raid you want to get notifications for. Use this parameter if you want to know when a specific broadcaster is raided by another broadcaster. The channel raid condition must include either from_broadcaster_user_id or to_broadcaster_user_id."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "from_broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster ID that created the raid."
        },
        "from_broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster login that created the raid."
        },
        "from_broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster display name that created the raid."
        },
        "to_broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster ID that received the raid."
        },
        "to_broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster login that received the raid."
        },
        "to_broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster display name that received the raid."
        },
        "viewers": {
          "type": "number",
          "required": true,
          "description": "The number of viewers in the raid."
        }
      }
    }
  },
  "channel.ban@1": {
    "id": "channel.ban@1",
    "label": "Channel Ban",
    "type": "channel.ban",
    "version": "1",
    "primary": true,
    "scopes": ["channel:moderate"],
    "description": "a viewer is banned from the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID for the channel you want to get ban notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID for the user who was banned on the specified channel."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The user login for the user who was banned on the specified channel."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The user display name for the user who was banned on the specified channel."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the issuer of the ban."
        },
        "moderator_user_login": {
          "type": "string",
          "required": true,
          "description": "The user login of the issuer of the ban."
        },
        "moderator_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the issuer of the ban."
        },
        "reason": {
          "type": "string",
          "required": true,
          "description": "The reason behind the ban."
        },
        "banned_at": {
          "type": "string",
          "required": true,
          "description": "The UTC date and time (in RFC3339 format) of when the user was banned or put in a timeout."
        },
        "ends_at": {
          "type": "string",
          "required": true,
          "description": "The UTC date and time (in RFC3339 format) of when the timeout ends. Is null if the user was banned instead of put in a timeout."
        },
        "is_permanent": {
          "type": "boolean",
          "required": true,
          "description": "Indicates whether the ban is permanent (true) or a timeout (false). If true, ends_at will be null."
        }
      }
    }
  },
  "channel.unban@1": {
    "id": "channel.unban@1",
    "label": "Channel Unban",
    "type": "channel.unban",
    "version": "1",
    "primary": true,
    "scopes": ["channel:moderate"],
    "description": "a viewer is unbanned from the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID for the channel you want to get unban notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user id for the user who was unbanned on the specified channel."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The user login for the user who was unbanned on the specified channel."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The user display name for the user who was unbanned on the specified channel."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the issuer of the unban."
        },
        "moderator_user_login": {
          "type": "string",
          "required": true,
          "description": "The user login of the issuer of the unban."
        },
        "moderator_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the issuer of the unban."
        }
      }
    }
  },
  "channel.unban_request.create@1": {
    "id": "channel.unban_request.create@1",
    "label": "Channel Unban Request Create",
    "type": "channel.unban_request.create",
    "version": "1",
    "primary": true,
    "scopes": ["moderator:read:unban", "moderator:manage:unban"],
    "description": "a user creates an unban request.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the user that has permission to moderate the broadcaster's channel and has granted your app permission to subscribe to this subscription type."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster you want to get chat unban request notifications for. Maximum: 1."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "The ID of the unban request."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's user ID for the channel the unban request was created for."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's login name."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's display name."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of user that is requesting to be unbanned."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The user's login name."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The user's display name."
        },
        "text": {
          "type": "string",
          "required": true,
          "description": "Message sent in the unban request."
        },
        "created_at": {
          "type": "string",
          "required": true,
          "description": "The UTC timestamp (in RFC3339 format) of when the unban request was created."
        }
      }
    }
  },
  "channel.unban_request.resolve@1": {
    "id": "channel.unban_request.resolve@1",
    "label": "Channel Unban Request Resolve",
    "type": "channel.unban_request.resolve",
    "version": "1",
    "primary": true,
    "scopes": ["moderator:read:unban", "moderator:manage:unban"],
    "description": "an unban request has been resolved.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the user that has permission to moderate the broadcaster's channel and has granted your app permission to subscribe to this subscription type."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster you want to get unban request resolution notifications for. Maximum: 1."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "The ID of the unban request."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's user ID for the channel the unban request was updated for."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's login name."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's display name."
        },
        "moderator_id": {
          "type": "string",
          "required": false,
          "description": "User ID of moderator who approved/denied the request."
        },
        "moderator_login": {
          "type": "string",
          "required": false,
          "description": "The moderator's login name"
        },
        "moderator_name": {
          "type": "string",
          "required": false,
          "description": "The moderator's display name"
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of user that requested to be unbanned."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The user's login name."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The user's display name."
        },
        "resolution_text": {
          "type": "string",
          "required": false,
          "description": "Resolution text supplied by the mod/broadcaster upon approval/denial of the request."
        },
        "status": {
          "type": "string",
          "required": true,
          "description": "Dictates whether the unban request was approved or denied. Can be the following:\n- approved\n- canceled\n- denied"
        }
      }
    }
  },
  "channel.moderate@1": {
    "id": "channel.moderate@1",
    "label": "Channel Moderate",
    "type": "channel.moderate",
    "version": "1",
    "primary": false,
    "scopes": [
      "moderator:read:blocked",
      "moderator:manage:blocked",
      "moderator:read:chat",
      "moderator:manage:chat",
      "moderator:read:unban",
      "moderator:manage:unban",
      "moderator:read:banned",
      "moderator:manage:banned",
      "moderator:read:moderators",
      "moderator:read:vips"
    ],
    "description": "a moderator performs a moderation action in a channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the broadcaster."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the moderator."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the broadcaster."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the broadcaster."
        },
        "source_broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The channel in which the action originally occurred. Is the same as the broadcaster_user_id if not in shared chat."
        },
        "source_broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The channel in which the action originally occurred. Is the same as the broadcaster_user_login if not in shared chat."
        },
        "source_broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The channel in which the action originally occurred. Is null when the moderator action happens in the same channel as the broadcaster. Is not null when in a shared chat session, and the action happens in the channel of a participant other than the broadcaster."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the moderator who performed the action."
        },
        "moderator_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the moderator."
        },
        "moderator_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the moderator."
        },
        "action": {
          "type": "string",
          "required": true,
          "description": "The type of action: Possible values are:\n- ban\n- timeout\n- unban\n- untimeout\n- clear\n- emoteonly\n- emoteonlyoff\n- followers\n- followersoff\n- uniquechat\n- uniquechatoff\n- slow\n- slowoff\n- subscribers\n- subscribersoff\n- unraid\n- delete\n- unvip\n- vip\n- raid\n- add_blocked_term\n- add_permitted_term\n- remove_blocked_term\n- remove_permitted_term\n- mod\n- unmod\n- approve_unban_request\n- deny_unban_request\n- shared_chat_ban\n- shared_chat_timeout\n- shared_chat_untimeout\n- shared_chat_unban\n- shared_chat_delete"
        },
        "followers": {
          "type": "object",
          "required": false,
          "description": "Optional.. Metadata associated with the followers command.",
          "fields": {
            "follow_duration_minutes": {
              "type": "number",
              "required": true,
              "description": "The length of time, in minutes, that the followers must have followed the broadcaster to participate in the chat room."
            }
          }
        },
        "slow": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the slow command.",
          "fields": {
            "wait_time_seconds": {
              "type": "number",
              "required": true,
              "description": "The amount of time, in seconds, that users need to wait between sending messages."
            }
          }
        },
        "vip": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the vip command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user gaining VIP status."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user gaining VIP status."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user gaining VIP status."
            }
          }
        },
        "unvip": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the unvip command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user losing VIP status."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user losing VIP status."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user losing VIP status."
            }
          }
        },
        "mod": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the mod command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user gaining mod status."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user gaining mod status."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user gaining mod status."
            }
          }
        },
        "unmod": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the unmod command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user losing mod status."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user losing mod status."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user losing mod status."
            }
          }
        },
        "ban": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the ban command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user being banned."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user being banned."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user being banned."
            },
            "reason": {
              "type": "string",
              "required": false,
              "description": "Reason given for the ban."
            }
          }
        },
        "unban": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the unban command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user being unbanned."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user being unbanned."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user being unbanned."
            }
          }
        },
        "timeout": {
          "type": "object",
          "required": false,
          "description": "Optional.. Metadata associated with the timeout command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user being timed out."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user being timed out."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user being timed out."
            },
            "reason": {
              "type": "string",
              "required": false,
              "description": "Optional.. The reason given for the timeout."
            },
            "expires_at": {
              "type": "string",
              "required": true,
              "description": "The time at which the timeout ends."
            }
          }
        },
        "untimeout": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the untimeout command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user being untimed out."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user being untimed out."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user untimed out."
            }
          }
        },
        "raid": {
          "type": "object",
          "required": false,
          "description": "Optional.. Metadata associated with the raid command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user being raided."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user being raided."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user raided."
            },
            "viewer_count": {
              "type": "number",
              "required": true,
              "description": "The viewer count."
            }
          }
        },
        "unraid": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the unraid command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user no longer being raided."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user no longer being raided."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the no longer user raided."
            }
          }
        },
        "delete": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the delete command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user whose message is being deleted."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user."
            },
            "message_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the message being deleted."
            },
            "message_body": {
              "type": "string",
              "required": true,
              "description": "The message body of the message being deleted."
            }
          }
        },
        "automod_terms": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the automod terms changes.",
          "fields": {
            "action": {
              "type": "string",
              "required": true,
              "description": "Either \"add\" or \"remove\"."
            },
            "list": {
              "type": "string",
              "required": true,
              "description": "Either \"blocked\" or \"permitted\"."
            },
            "terms": {
              "type": "string[]",
              "required": true,
              "description": "Terms being added or removed."
            },
            "from_automod": {
              "type": "boolean",
              "required": true,
              "description": "Whether the terms were added due to an Automod message approve/deny action."
            }
          }
        },
        "unban_request": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with an unban request.",
          "fields": {
            "is_approved": {
              "type": "boolean",
              "required": true,
              "description": "Whether or not the unban request was approved or denied."
            },
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the banned user."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user."
            },
            "moderator_message": {
              "type": "string",
              "required": true,
              "description": "The message included by the moderator explaining their approval or denial."
            }
          }
        },
        "shared_chat_ban": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_ban event. Is null if action is not shared_chat_ban . This field has the same information as the ban field but for a action that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        },
        "shared_chat_unban": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_unban event. Is null if action is not shared_chat_unban . This field has the same information as the unban field but for a action that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        },
        "shared_chat_timeout": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_timeout event. Is null if action is not shared_chat_timeout . This field has the same information as the timeout field but for a action that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        },
        "shared_chat_untimeout": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_untimeout event. Is null if action is not shared_chat_untimeout . This field has the same information as the untimeout field but for a action that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        },
        "shared_chat_delete": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_delete event. Is null if action is not shared_chat_delete . This field has the same information as the delete field but for a action that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        }
      }
    }
  },
  "channel.moderate@2": {
    "id": "channel.moderate@2",
    "label": "Channel Moderate V2",
    "type": "channel.moderate",
    "version": "2",
    "primary": true,
    "scopes": [
      "moderator:read:blocked",
      "moderator:manage:blocked",
      "moderator:read:chat",
      "moderator:manage:chat",
      "moderator:read:unban",
      "moderator:manage:unban",
      "moderator:read:banned",
      "moderator:manage:banned",
      "moderator:read:warnings",
      "moderator:manage:warnings",
      "moderator:read:moderators",
      "moderator:read:vips"
    ],
    "description": "a moderator performs a moderation action in a channel. Includes warnings.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the broadcaster."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the moderator."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the broadcaster."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the broadcaster."
        },
        "source_broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The channel in which the action originally occurred. Is the same as the broadcaster_user_id if not in shared chat."
        },
        "source_broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The channel in which the action originally occurred. Is the same as the broadcaster_user_login if not in shared chat."
        },
        "source_broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The channel in which the action originally occurred. Is null when the moderator action happens in the same channel as the broadcaster. Is not null when in a shared chat session, and the action happens in the channel of a participant other than the broadcaster."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the moderator who performed the action."
        },
        "moderator_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the moderator."
        },
        "moderator_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the moderator."
        },
        "action": {
          "type": "string",
          "required": true,
          "description": "The type of action: Possible values are:\n- ban\n- timeout\n- unban\n- untimeout\n- clear\n- emoteonly\n- emoteonlyoff\n- followers\n- followersoff\n- uniquechat\n- uniquechatoff\n- slow\n- slowoff\n- subscribers\n- subscribersoff\n- unraid\n- delete\n- unvip\n- vip\n- raid\n- add_blocked_term\n- add_permitted_term\n- remove_blocked_term\n- remove_permitted_term\n- mod\n- unmod\n- approve_unban_request\n- deny_unban_request\n- shared_chat_ban\n- shared_chat_timeout\n- shared_chat_untimeout\n- shared_chat_unban\n- shared_chat_delete"
        },
        "followers": {
          "type": "object",
          "required": false,
          "description": "Optional.. Metadata associated with the followers command.",
          "fields": {
            "follow_duration_minutes": {
              "type": "number",
              "required": true,
              "description": "The length of time, in minutes, that the followers must have followed the broadcaster to participate in the chat room."
            }
          }
        },
        "slow": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the slow command.",
          "fields": {
            "wait_time_seconds": {
              "type": "number",
              "required": true,
              "description": "The amount of time, in seconds, that users need to wait between sending messages."
            }
          }
        },
        "vip": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the vip command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user gaining VIP status."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user gaining VIP status."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user gaining VIP status."
            }
          }
        },
        "unvip": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the unvip command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user losing VIP status."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user losing VIP status."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user losing VIP status."
            }
          }
        },
        "mod": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the mod command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user gaining mod status."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user gaining mod status."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user gaining mod status."
            }
          }
        },
        "unmod": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the unmod command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user losing mod status."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user losing mod status."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user losing mod status."
            }
          }
        },
        "ban": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the ban command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user being banned."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user being banned."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user being banned."
            },
            "reason": {
              "type": "string",
              "required": false,
              "description": "Reason given for the ban."
            }
          }
        },
        "unban": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the unban command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user being unbanned."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user being unbanned."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user being unbanned."
            }
          }
        },
        "timeout": {
          "type": "object",
          "required": false,
          "description": "Optional.. Metadata associated with the timeout command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user being timed out."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user being timed out."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user being timed out."
            },
            "reason": {
              "type": "string",
              "required": false,
              "description": "Optional.. The reason given for the timeout."
            },
            "expires_at": {
              "type": "string",
              "required": true,
              "description": "The time at which the timeout ends."
            }
          }
        },
        "untimeout": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the untimeout command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user being untimed out."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user being untimed out."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user untimed out."
            }
          }
        },
        "raid": {
          "type": "object",
          "required": false,
          "description": "Optional.. Metadata associated with the raid command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user being raided."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user being raided."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user raided."
            },
            "viewer_count": {
              "type": "number",
              "required": true,
              "description": "The viewer count."
            }
          }
        },
        "unraid": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the unraid command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user no longer being raided."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user no longer being raided."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the no longer user raided."
            }
          }
        },
        "delete": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the delete command.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user whose message is being deleted."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user."
            },
            "message_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the message being deleted."
            },
            "message_body": {
              "type": "string",
              "required": true,
              "description": "The message body of the message being deleted."
            }
          }
        },
        "automod_terms": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with the automod terms changes.",
          "fields": {
            "action": {
              "type": "string",
              "required": true,
              "description": "Either \"add\" or \"remove\"."
            },
            "list": {
              "type": "string",
              "required": true,
              "description": "Either \"blocked\" or \"permitted\"."
            },
            "terms": {
              "type": "string[]",
              "required": true,
              "description": "Terms being added or removed."
            },
            "from_automod": {
              "type": "boolean",
              "required": true,
              "description": "Whether the terms were added due to an Automod message approve/deny action."
            }
          }
        },
        "unban_request": {
          "type": "object",
          "required": false,
          "description": "Metadata associated with an unban request.",
          "fields": {
            "is_approved": {
              "type": "boolean",
              "required": true,
              "description": "Whether or not the unban request was approved or denied."
            },
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the banned user."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The login of the user."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user name of the user."
            },
            "moderator_message": {
              "type": "string",
              "required": true,
              "description": "The message included by the moderator explaining their approval or denial."
            }
          }
        },
        "shared_chat_ban": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_ban event. Is null if action is not shared_chat_ban . This field has the same information as the ban field but for a action that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        },
        "shared_chat_unban": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_unban event. Is null if action is not shared_chat_unban . This field has the same information as the unban field but for a action that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        },
        "shared_chat_timeout": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_timeout event. Is null if action is not shared_chat_timeout . This field has the same information as the timeout field but for a action that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        },
        "shared_chat_untimeout": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_untimeout event. Is null if action is not shared_chat_untimeout . This field has the same information as the untimeout field but for a action that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        },
        "shared_chat_delete": {
          "type": "object",
          "required": false,
          "description": "Information about the shared_chat_delete event. Is null if action is not shared_chat_delete . This field has the same information as the delete field but for a action that happened for a channel in a shared chat session other than the broadcaster in the subscription condition."
        }
      }
    }
  },
  "channel.moderator.add@1": {
    "id": "channel.moderator.add@1",
    "label": "Channel Moderator Add",
    "type": "channel.moderator.add",
    "version": "1",
    "primary": true,
    "scopes": ["moderation:read"],
    "description": "moderator privileges were added to a user on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID for the channel you want to get moderator addition notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the new moderator."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The user login of the new moderator."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the new moderator."
        }
      }
    }
  },
  "channel.moderator.remove@1": {
    "id": "channel.moderator.remove@1",
    "label": "Channel Moderator Remove",
    "type": "channel.moderator.remove",
    "version": "1",
    "primary": true,
    "scopes": ["moderation:read"],
    "description": "moderator privileges were removed from a user on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID for the channel you want to get moderator removal notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the removed moderator."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The user login of the removed moderator."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the removed moderator."
        }
      }
    }
  },
  "channel.guest_star_session.begin@beta": {
    "id": "channel.guest_star_session.begin@beta",
    "label": "Channel Guest Star Session Begin",
    "type": "channel.guest_star_session.begin@be",
    "version": "beta",
    "primary": true,
    "scopes": [
      "channel:read:guest",
      "channel:manage:guest",
      "moderator:read:guest",
      "moderator:manage:guest"
    ],
    "description": "the host began a new Guest Star session.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID of the channel hosting the Guest Star Session"
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the moderator or broadcaster of the specified channel."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster display name."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster login."
        },
        "session_id": {
          "type": "string",
          "required": true,
          "description": "ID representing the unique session that was started."
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "RFC3339 timestamp indicating the time the session began."
        }
      }
    }
  },
  "channel.guest_star_session.end@beta": {
    "id": "channel.guest_star_session.end@beta",
    "label": "Channel Guest Star Session End",
    "type": "channel.guest_star_session.end@be",
    "version": "beta",
    "primary": true,
    "scopes": [
      "channel:read:guest",
      "channel:manage:guest",
      "moderator:read:guest",
      "moderator:manage:guest"
    ],
    "description": "a running Guest Star session has ended.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID of the channel hosting the Guest Star Session"
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the moderator or broadcaster of the specified channel."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The non-host broadcaster user ID."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The non-host broadcaster display name."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The non-host broadcaster login."
        },
        "session_id": {
          "type": "string",
          "required": true,
          "description": "ID representing the unique session that was started."
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "RFC3339 timestamp indicating the time the session began."
        },
        "ended_at": {
          "type": "string",
          "required": true,
          "description": "RFC3339 timestamp indicating the time the session ended."
        },
        "host_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the host channel."
        },
        "host_user_name": {
          "type": "string",
          "required": true,
          "description": "The host display name."
        },
        "host_user_login": {
          "type": "string",
          "required": true,
          "description": "The host login."
        }
      }
    }
  },
  "channel.guest_star_guest.update@beta": {
    "id": "channel.guest_star_guest.update@beta",
    "label": "Channel Guest Star Guest Update",
    "type": "channel.guest_star_guest.update@be",
    "version": "beta",
    "primary": true,
    "scopes": [
      "channel:read:guest",
      "channel:manage:guest",
      "moderator:read:guest",
      "moderator:manage:guest"
    ],
    "description": "a guest or a slot is updated in an active Guest Star session.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID of the channel hosting the Guest Star Session"
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the moderator or broadcaster of the specified channel."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The non-host broadcaster user ID."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The non-host broadcaster display name."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The non-host broadcaster login."
        },
        "session_id": {
          "type": "string",
          "required": true,
          "description": "ID representing the unique session that was started."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the moderator who updated the guest's state (could be the host). null if the update was performed by the guest."
        },
        "moderator_user_name": {
          "type": "string",
          "required": true,
          "description": "The moderator display name. null if the update was performed by the guest."
        },
        "moderator_user_login": {
          "type": "string",
          "required": true,
          "description": "The moderator login. null if the update was performed by the guest."
        },
        "guest_user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the guest who transitioned states in the session. null if the slot is now empty."
        },
        "guest_user_name": {
          "type": "string",
          "required": true,
          "description": "The guest display name. null if the slot is now empty."
        },
        "guest_user_login": {
          "type": "string",
          "required": true,
          "description": "The guest login. null if the slot is now empty."
        },
        "slot_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the slot assignment the guest is assigned to. null if the guest is in the INVITED, REMOVED, READY, or ACCEPTED state."
        },
        "state": {
          "type": "string",
          "required": true,
          "description": "The current state of the user after the update has taken place. null if the slot is now empty. Can otherwise be one of the following:\n- invited — The guest has transitioned to the invite queue. This can take place when the guest was previously assigned a slot, but have been removed from the call and are sent back to the invite queue.\n- accepted — The guest has accepted the invite and is currently in the process of setting up to join the session.\n- ready — The guest has signaled they are ready and can be assigned a slot.\n- backstage — The guest has been assigned a slot in the session, but is not currently seen live in the broadcasting software.\n- live — The guest is now live in the host's broadcasting software.\n- removed — The guest was removed from the call or queue.\n- accepted — The guest has accepted the invite to the call."
        },
        "host_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the host channel."
        },
        "host_user_name": {
          "type": "string",
          "required": true,
          "description": "The host display name."
        },
        "host_user_login": {
          "type": "string",
          "required": true,
          "description": "The host login."
        },
        "host_video_enabled": {
          "type": "boolean",
          "required": true,
          "description": "Flag that signals whether the host is allowing the slot's video to be seen by participants within the session. null if the guest is not slotted."
        },
        "host_audio_enabled": {
          "type": "boolean",
          "required": true,
          "description": "Flag that signals whether the host is allowing the slot's audio to be heard by participants within the session. null if the guest is not slotted."
        },
        "host_volume": {
          "type": "number",
          "required": true,
          "description": "Value between 0-100 that represents the slot's audio level as heard by participants within the session. null if the guest is not slotted."
        }
      }
    }
  },
  "channel.guest_star_settings.update@beta": {
    "id": "channel.guest_star_settings.update@beta",
    "label": "Channel Guest Star Settings Update",
    "type": "channel.guest_star_settings.update@be",
    "version": "beta",
    "primary": true,
    "scopes": [
      "channel:read:guest",
      "channel:manage:guest",
      "moderator:read:guest",
      "moderator:manage:guest"
    ],
    "description": "the host preferences for Guest Star have been updated.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID of the channel hosting the Guest Star Session"
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the moderator or broadcaster of the specified channel."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the host channel."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster display name"
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "he broadcaster login."
        },
        "is_moderator_send_live_enabled": {
          "type": "boolean",
          "required": true,
          "description": "Flag determining if Guest Star moderators have access to control whether a guest is live once assigned to a slot."
        },
        "slot_count": {
          "type": "number",
          "required": true,
          "description": "Number of slots the Guest Star call interface will allow the host to add to a call."
        },
        "is_browser_source_audio_enabled": {
          "type": "boolean",
          "required": true,
          "description": "Flag determining if browser sources subscribed to sessions on this channel should output audio."
        },
        "group_layout": {
          "type": "string",
          "required": true,
          "description": "This setting determines how the guests within a session should be laid out within a group browser source. Can be one of the following values:\n- tiled — All live guests are tiled within the browser source with the same size.\n- screenshare — All live guests are tiled within the browser source with the same size. If there is an active screen share, it is sized larger than the other guests.\n- horizontal_top — Indicates the group layout will contain all participants in a top-aligned horizontal stack.\n- horizontal_bottom — Indicates the group layout will contain all participants in a bottom-aligned horizontal stack.\n- vertical_left — Indicates the group layout will contain all participants in a left-aligned vertical stack.\n- vertical_right — Indicates the group layout will contain all participants in a right-aligned vertical stack."
        }
      }
    }
  },
  "channel.channel_points_automatic_reward_redemption.add@1": {
    "id": "channel.channel_points_automatic_reward_redemption.add@1",
    "label": "Channel Points Automatic Reward Redemption Add",
    "type": "channel.channel_points_automatic_reward_redemption.add",
    "version": "1",
    "primary": false,
    "scopes": ["channel:read:redemptions", "channel:manage:redemptions"],
    "description": "a viewer has redeemed an automatic channel points reward on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID for the channel you want to receive channel points reward add notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the channel where the reward was redeemed."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the channel where the reward was redeemed."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the channel where the reward was redeemed."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the redeeming user."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the redeeming user."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the redeeming user."
        },
        "id": {
          "type": "string",
          "required": true,
          "description": "The ID of the Redemption."
        },
        "reward": {
          "type": "object",
          "required": true,
          "description": "An object that contains the reward information.",
          "fields": {
            "type": {
              "type": "string",
              "required": true,
              "description": "The type of reward. One of:\n- single_message_bypass_sub_mode\n- send_highlighted_message\n- random_sub_emote_unlock\n- chosen_sub_emote_unlock\n- chosen_modified_sub_emote_unlock\n- message_effect\n- gigantify_an_emote\n- celebration"
            },
            "cost": {
              "type": "number",
              "required": true,
              "description": "The reward cost."
            },
            "unlocked_emote": {
              "type": "object",
              "required": false,
              "description": "Emote that was unlocked.",
              "fields": {
                "id": {
                  "type": "string",
                  "required": true,
                  "description": "The emote ID."
                },
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "The human readable emote token."
                }
              }
            }
          }
        },
        "message": {
          "type": "object",
          "required": true,
          "description": "An object that contains the user message and emote information needed to recreate the message.",
          "fields": {
            "text": {
              "type": "string",
              "required": true,
              "description": "The text of the chat message."
            },
            "emotes": {
              "type": "object[]",
              "required": true,
              "description": "An array that includes the emote ID and start and end positions for where the emote appears in the text.",
              "fields": {
                "id": {
                  "type": "string",
                  "required": true,
                  "description": "The emote ID."
                },
                "begin": {
                  "type": "number",
                  "required": true,
                  "description": "The index of where the Emote starts in the text."
                },
                "end": {
                  "type": "number",
                  "required": true,
                  "description": "The index of where the Emote ends in the text."
                }
              }
            }
          }
        },
        "user_input": {
          "type": "string",
          "required": false,
          "description": "A string that the user entered if the reward requires input."
        },
        "redeemed_at": {
          "type": "string",
          "required": true,
          "description": "The UTC date and time (in RFC3339 format) of when the reward was redeemed."
        }
      }
    }
  },
  "channel.channel_points_automatic_reward_redemption.add@2": {
    "id": "channel.channel_points_automatic_reward_redemption.add@2",
    "label": "Channel Points Automatic Reward Redemption Add V2",
    "type": "channel.channel_points_automatic_reward_redemption.add",
    "version": "2",
    "primary": true,
    "scopes": ["channel:read:redemptions", "channel:manage:redemptions"],
    "description": "a viewer has redeemed an automatic channel points reward on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID for the channel you want to receive channel points reward add notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the channel where the reward was redeemed."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the channel where the reward was redeemed."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the channel where the reward was redeemed."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the redeeming user."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the redeeming user."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the redeeming user."
        },
        "id": {
          "type": "string",
          "required": true,
          "description": "The ID of the Redemption."
        },
        "reward": {
          "type": "object",
          "required": true,
          "description": "An object that contains the reward information.",
          "fields": {
            "type": {
              "type": "string",
              "required": true,
              "description": "The type of reward. One of:\n- single_message_bypass_sub_mode\n- send_highlighted_message\n- random_sub_emote_unlock\n- chosen_sub_emote_unlock\n- chosen_modified_sub_emote_unlock\n- message_effect\n- gigantify_an_emote\n- celebration"
            },
            "cost": {
              "type": "number",
              "required": true,
              "description": "The reward cost."
            },
            "unlocked_emote": {
              "type": "object",
              "required": false,
              "description": "Emote that was unlocked.",
              "fields": {
                "id": {
                  "type": "string",
                  "required": true,
                  "description": "The emote ID."
                },
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "The human readable emote token."
                }
              }
            }
          }
        },
        "message": {
          "type": "object",
          "required": true,
          "description": "An object that contains the user message and emote information needed to recreate the message.",
          "fields": {
            "text": {
              "type": "string",
              "required": true,
              "description": "The text of the chat message."
            },
            "emotes": {
              "type": "object[]",
              "required": true,
              "description": "An array that includes the emote ID and start and end positions for where the emote appears in the text.",
              "fields": {
                "id": {
                  "type": "string",
                  "required": true,
                  "description": "The emote ID."
                },
                "begin": {
                  "type": "number",
                  "required": true,
                  "description": "The index of where the Emote starts in the text."
                },
                "end": {
                  "type": "number",
                  "required": true,
                  "description": "The index of where the Emote ends in the text."
                }
              }
            }
          }
        },
        "user_input": {
          "type": "string",
          "required": false,
          "description": "A string that the user entered if the reward requires input."
        },
        "redeemed_at": {
          "type": "string",
          "required": true,
          "description": "The UTC date and time (in RFC3339 format) of when the reward was redeemed."
        }
      }
    }
  },
  "channel.channel_points_custom_reward.add@1": {
    "id": "channel.channel_points_custom_reward.add@1",
    "label": "Channel Points Custom Reward Add",
    "type": "channel.channel_points_custom_reward.add",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:redemptions", "channel:manage:redemptions"],
    "description": "a custom channel points reward has been created for the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID for the channel you want to receive channel points custom reward add notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "The reward identifier."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "is_enabled": {
          "type": "boolean",
          "required": true,
          "description": "Is the reward currently enabled. If false, the reward won't show up to viewers."
        },
        "is_paused": {
          "type": "boolean",
          "required": true,
          "description": "Is the reward currently paused. If true, viewers can't redeem."
        },
        "is_in_stock": {
          "type": "boolean",
          "required": true,
          "description": "Is the reward currently in stock. If false, viewers can't redeem."
        },
        "title": {
          "type": "string",
          "required": true,
          "description": "The reward title."
        },
        "cost": {
          "type": "number",
          "required": true,
          "description": "The reward cost."
        },
        "prompt": {
          "type": "string",
          "required": true,
          "description": "The reward description."
        },
        "is_user_input_required": {
          "type": "boolean",
          "required": true,
          "description": "Does the viewer need to enter information when redeeming the reward."
        },
        "should_redemptions_skip_request_queue": {
          "type": "boolean",
          "required": true,
          "description": "Should redemptions be set to fulfilled status immediately when redeemed and skip the request queue instead of the normal unfulfilled status."
        },
        "max_per_stream": {
          "type": "object",
          "required": true,
          "description": "Whether a maximum per stream is enabled and what the maximum is.",
          "fields": {
            "is_enabled": {
              "type": "boolean",
              "required": true,
              "description": "Is the setting enabled."
            },
            "value": {
              "type": "number",
              "required": true,
              "description": "The max per stream limit."
            }
          }
        },
        "max_per_user_per_stream": {
          "type": "object",
          "required": true,
          "description": "Whether a maximum per user per stream is enabled and what the maximum is.",
          "fields": {
            "is_enabled": {
              "type": "boolean",
              "required": true,
              "description": "Is the setting enabled."
            },
            "value": {
              "type": "number",
              "required": true,
              "description": "The max per user per stream limit."
            }
          }
        },
        "background_color": {
          "type": "string",
          "required": true,
          "description": "Custom background color for the reward. Format: Hex with # prefix. Example: #FA1ED2."
        },
        "image": {
          "type": "object",
          "required": true,
          "description": "Set of custom images of 1x, 2x and 4x sizes for the reward. Can be null if no images have been uploaded.",
          "fields": {
            "url_1x": {
              "type": "string",
              "required": true,
              "description": "URL for the image at 1x size."
            },
            "url_2x": {
              "type": "string",
              "required": true,
              "description": "URL for the image at 2x size."
            },
            "url_4x": {
              "type": "string",
              "required": true,
              "description": "URL for the image at 4x size."
            }
          }
        },
        "default_image": {
          "type": "object",
          "required": true,
          "description": "Set of default images of 1x, 2x and 4x sizes for the reward.",
          "fields": {
            "url_1x": {
              "type": "string",
              "required": true,
              "description": "URL for the image at 1x size."
            },
            "url_2x": {
              "type": "string",
              "required": true,
              "description": "URL for the image at 2x size."
            },
            "url_4x": {
              "type": "string",
              "required": true,
              "description": "URL for the image at 4x size."
            }
          }
        },
        "global_cooldown": {
          "type": "object",
          "required": true,
          "description": "Whether a cooldown is enabled and what the cooldown is in seconds.",
          "fields": {
            "is_enabled": {
              "type": "boolean",
              "required": true,
              "description": "Is the setting enabled."
            },
            "seconds": {
              "type": "number",
              "required": true,
              "description": "The cooldown in seconds."
            }
          }
        },
        "cooldown_expires_at": {
          "type": "string",
          "required": true,
          "description": "Timestamp of the cooldown expiration. null if the reward isn't on cooldown."
        },
        "redemptions_redeemed_current_stream": {
          "type": "number",
          "required": true,
          "description": "The number of redemptions redeemed during the current live stream. Counts against the max_per_stream limit. null if the broadcasters stream isn't live or max_per_stream isn't enabled."
        }
      }
    }
  },
  "channel.channel_points_custom_reward.update@1": {
    "id": "channel.channel_points_custom_reward.update@1",
    "label": "Channel Points Custom Reward Update",
    "type": "channel.channel_points_custom_reward.update",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:redemptions", "channel:manage:redemptions"],
    "description": "a custom channel points reward has been updated for the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID for the channel you want to receive channel points custom reward update notifications for."
        },
        "reward_id": {
          "type": "string",
          "required": false,
          "description": "Specify a reward id to only receive notifications for a specific reward."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "The reward identifier."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "is_enabled": {
          "type": "boolean",
          "required": true,
          "description": "Is the reward currently enabled. If false, the reward won't show up to viewers."
        },
        "is_paused": {
          "type": "boolean",
          "required": true,
          "description": "Is the reward currently paused. If true, viewers can't redeem."
        },
        "is_in_stock": {
          "type": "boolean",
          "required": true,
          "description": "Is the reward currently in stock. If false, viewers can't redeem."
        },
        "title": {
          "type": "string",
          "required": true,
          "description": "The reward title."
        },
        "cost": {
          "type": "number",
          "required": true,
          "description": "The reward cost."
        },
        "prompt": {
          "type": "string",
          "required": true,
          "description": "The reward description."
        },
        "is_user_input_required": {
          "type": "boolean",
          "required": true,
          "description": "Does the viewer need to enter information when redeeming the reward."
        },
        "should_redemptions_skip_request_queue": {
          "type": "boolean",
          "required": true,
          "description": "Should redemptions be set to fulfilled status immediately when redeemed and skip the request queue instead of the normal unfulfilled status."
        },
        "max_per_stream": {
          "type": "object",
          "required": true,
          "description": "Whether a maximum per stream is enabled and what the maximum is.",
          "fields": {
            "is_enabled": {
              "type": "boolean",
              "required": true,
              "description": "Is the setting enabled."
            },
            "value": {
              "type": "number",
              "required": true,
              "description": "The max per stream limit."
            }
          }
        },
        "max_per_user_per_stream": {
          "type": "object",
          "required": true,
          "description": "Whether a maximum per user per stream is enabled and what the maximum is.",
          "fields": {
            "is_enabled": {
              "type": "boolean",
              "required": true,
              "description": "Is the setting enabled."
            },
            "value": {
              "type": "number",
              "required": true,
              "description": "The max per user per stream limit."
            }
          }
        },
        "background_color": {
          "type": "string",
          "required": true,
          "description": "Custom background color for the reward. Format: Hex with # prefix. Example: #FA1ED2."
        },
        "image": {
          "type": "object",
          "required": true,
          "description": "Set of custom images of 1x, 2x and 4x sizes for the reward. Can be null if no images have been uploaded.",
          "fields": {
            "url_1x": {
              "type": "string",
              "required": true,
              "description": "URL for the image at 1x size."
            },
            "url_2x": {
              "type": "string",
              "required": true,
              "description": "URL for the image at 2x size."
            },
            "url_4x": {
              "type": "string",
              "required": true,
              "description": "URL for the image at 4x size."
            }
          }
        },
        "default_image": {
          "type": "object",
          "required": true,
          "description": "Set of default images of 1x, 2x and 4x sizes for the reward.",
          "fields": {
            "url_1x": {
              "type": "string",
              "required": true,
              "description": "URL for the image at 1x size."
            },
            "url_2x": {
              "type": "string",
              "required": true,
              "description": "URL for the image at 2x size."
            },
            "url_4x": {
              "type": "string",
              "required": true,
              "description": "URL for the image at 4x size."
            }
          }
        },
        "global_cooldown": {
          "type": "object",
          "required": true,
          "description": "Whether a cooldown is enabled and what the cooldown is in seconds.",
          "fields": {
            "is_enabled": {
              "type": "boolean",
              "required": true,
              "description": "Is the setting enabled."
            },
            "seconds": {
              "type": "number",
              "required": true,
              "description": "The cooldown in seconds."
            }
          }
        },
        "cooldown_expires_at": {
          "type": "string",
          "required": true,
          "description": "Timestamp of the cooldown expiration. null if the reward isn't on cooldown."
        },
        "redemptions_redeemed_current_stream": {
          "type": "number",
          "required": true,
          "description": "The number of redemptions redeemed during the current live stream. Counts against the max_per_stream limit. null if the broadcasters stream isn't live or max_per_stream isn't enabled."
        }
      }
    }
  },
  "channel.channel_points_custom_reward.remove@1": {
    "id": "channel.channel_points_custom_reward.remove@1",
    "label": "Channel Points Custom Reward Remove",
    "type": "channel.channel_points_custom_reward.remove",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:redemptions", "channel:manage:redemptions"],
    "description": "a custom channel points reward has been removed from the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID for the channel you want to receive channel points custom reward remove notifications for."
        },
        "reward_id": {
          "type": "string",
          "required": false,
          "description": "Specify a reward id to only receive notifications for a specific reward."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "The reward identifier."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "is_enabled": {
          "type": "boolean",
          "required": true,
          "description": "Is the reward currently enabled. If false, the reward won't show up to viewers."
        },
        "is_paused": {
          "type": "boolean",
          "required": true,
          "description": "Is the reward currently paused. If true, viewers can't redeem."
        },
        "is_in_stock": {
          "type": "boolean",
          "required": true,
          "description": "Is the reward currently in stock. If false, viewers can't redeem."
        },
        "title": {
          "type": "string",
          "required": true,
          "description": "The reward title."
        },
        "cost": {
          "type": "number",
          "required": true,
          "description": "The reward cost."
        },
        "prompt": {
          "type": "string",
          "required": true,
          "description": "The reward description."
        },
        "is_user_input_required": {
          "type": "boolean",
          "required": true,
          "description": "Does the viewer need to enter information when redeeming the reward."
        },
        "should_redemptions_skip_request_queue": {
          "type": "boolean",
          "required": true,
          "description": "Should redemptions be set to fulfilled status immediately when redeemed and skip the request queue instead of the normal unfulfilled status."
        },
        "max_per_stream": {
          "type": "object",
          "required": true,
          "description": "Whether a maximum per stream is enabled and what the maximum is.",
          "fields": {
            "is_enabled": {
              "type": "boolean",
              "required": true,
              "description": "Is the setting enabled."
            },
            "value": {
              "type": "number",
              "required": true,
              "description": "The max per stream limit."
            }
          }
        },
        "max_per_user_per_stream": {
          "type": "object",
          "required": true,
          "description": "Whether a maximum per user per stream is enabled and what the maximum is.",
          "fields": {
            "is_enabled": {
              "type": "boolean",
              "required": true,
              "description": "Is the setting enabled."
            },
            "value": {
              "type": "number",
              "required": true,
              "description": "The max per user per stream limit."
            }
          }
        },
        "background_color": {
          "type": "string",
          "required": true,
          "description": "Custom background color for the reward. Format: Hex with # prefix. Example: #FA1ED2."
        },
        "image": {
          "type": "object",
          "required": true,
          "description": "Set of custom images of 1x, 2x and 4x sizes for the reward. Can be null if no images have been uploaded.",
          "fields": {
            "url_1x": {
              "type": "string",
              "required": true,
              "description": "URL for the image at 1x size."
            },
            "url_2x": {
              "type": "string",
              "required": true,
              "description": "URL for the image at 2x size."
            },
            "url_4x": {
              "type": "string",
              "required": true,
              "description": "URL for the image at 4x size."
            }
          }
        },
        "default_image": {
          "type": "object",
          "required": true,
          "description": "Set of default images of 1x, 2x and 4x sizes for the reward.",
          "fields": {
            "url_1x": {
              "type": "string",
              "required": true,
              "description": "URL for the image at 1x size."
            },
            "url_2x": {
              "type": "string",
              "required": true,
              "description": "URL for the image at 2x size."
            },
            "url_4x": {
              "type": "string",
              "required": true,
              "description": "URL for the image at 4x size."
            }
          }
        },
        "global_cooldown": {
          "type": "object",
          "required": true,
          "description": "Whether a cooldown is enabled and what the cooldown is in seconds.",
          "fields": {
            "is_enabled": {
              "type": "boolean",
              "required": true,
              "description": "Is the setting enabled."
            },
            "seconds": {
              "type": "number",
              "required": true,
              "description": "The cooldown in seconds."
            }
          }
        },
        "cooldown_expires_at": {
          "type": "string",
          "required": true,
          "description": "Timestamp of the cooldown expiration. null if the reward isn't on cooldown."
        },
        "redemptions_redeemed_current_stream": {
          "type": "number",
          "required": true,
          "description": "The number of redemptions redeemed during the current live stream. Counts against the max_per_stream limit. null if the broadcasters stream isn't live or max_per_stream isn't enabled."
        }
      }
    }
  },
  "channel.channel_points_custom_reward_redemption.add@1": {
    "id": "channel.channel_points_custom_reward_redemption.add@1",
    "label": "Channel Points Custom Reward Redemption Add",
    "type": "channel.channel_points_custom_reward_redemption.add",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:redemptions", "channel:manage:redemptions"],
    "description": "a viewer has redeemed a custom channel points reward on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID for the channel you want to receive channel points custom reward redemption add notifications for."
        },
        "reward_id": {
          "type": "string",
          "required": false,
          "description": "Specify a reward id to only receive notifications for a specific reward."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "The redemption identifier."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the user that redeemed the reward."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "Login of the user that redeemed the reward."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "Display name of the user that redeemed the reward."
        },
        "user_input": {
          "type": "string",
          "required": true,
          "description": "The user input provided. Empty string if not provided."
        },
        "status": {
          "type": "string",
          "required": true,
          "description": "Defaults to unfulfilled. Possible values are unknown, unfulfilled, fulfilled, and canceled ."
        },
        "reward": {
          "type": "object",
          "required": true,
          "description": "Basic information about the reward that was redeemed, at the time it was redeemed.",
          "fields": {
            "id": {
              "type": "string",
              "required": true,
              "description": "The reward identifier."
            },
            "title": {
              "type": "string",
              "required": true,
              "description": "The reward name."
            },
            "cost": {
              "type": "number",
              "required": true,
              "description": "The reward cost."
            },
            "prompt": {
              "type": "string",
              "required": true,
              "description": "The reward description."
            }
          }
        },
        "redeemed_at": {
          "type": "string",
          "required": true,
          "description": "RFC3339 timestamp of when the reward was redeemed."
        }
      }
    }
  },
  "channel.channel_points_custom_reward_redemption.update@1": {
    "id": "channel.channel_points_custom_reward_redemption.update@1",
    "label": "Channel Points Custom Reward Redemption Update",
    "type": "channel.channel_points_custom_reward_redemption.update",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:redemptions", "channel:manage:redemptions"],
    "description": "a redemption of a channel points custom reward has been updated for the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID for the channel you want to receive channel points custom reward redemption update notifications for."
        },
        "reward_id": {
          "type": "string",
          "required": false,
          "description": "Specify a reward id to only receive notifications for a specific reward."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "The redemption identifier."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the user that redeemed the reward."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "Login of the user that redeemed the reward."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "Display name of the user that redeemed the reward."
        },
        "user_input": {
          "type": "string",
          "required": true,
          "description": "The user input provided. Empty string if not provided."
        },
        "status": {
          "type": "string",
          "required": true,
          "description": "Will be fulfilled or canceled. Possible values are unknown, unfulfilled, fulfilled, and canceled ."
        },
        "reward": {
          "type": "object",
          "required": true,
          "description": "Basic information about the reward that was redeemed, at the time it was redeemed.",
          "fields": {
            "id": {
              "type": "string",
              "required": true,
              "description": "The reward identifier."
            },
            "title": {
              "type": "string",
              "required": true,
              "description": "The reward name."
            },
            "cost": {
              "type": "number",
              "required": true,
              "description": "The reward cost."
            },
            "prompt": {
              "type": "string",
              "required": true,
              "description": "The reward description."
            }
          }
        },
        "redeemed_at": {
          "type": "string",
          "required": true,
          "description": "RFC3339 timestamp of when the reward was redeemed."
        }
      }
    }
  },
  "channel.poll.begin@1": {
    "id": "channel.poll.begin@1",
    "label": "Channel Poll Begin",
    "type": "channel.poll.begin",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:polls", "channel:manage:polls"],
    "description": "a poll started on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID of the channel for which \"poll begin\" notifications will be received."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "ID of the poll."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "title": {
          "type": "string",
          "required": true,
          "description": "Question displayed for the poll."
        },
        "choices": {
          "type": "object[]",
          "required": true,
          "description": "An array of choices for the poll.",
          "fields": {
            "id": {
              "type": "string",
              "required": true,
              "description": "ID for the choice."
            },
            "title": {
              "type": "string",
              "required": true,
              "description": "Text displayed for the choice."
            },
            "bits_votes": {
              "type": "number",
              "required": true,
              "description": "Not used; will be set to 0."
            },
            "channel_points_votes": {
              "type": "number",
              "required": true,
              "description": "Number of votes received via Channel Points."
            },
            "votes": {
              "type": "number",
              "required": true,
              "description": "Total number of votes received for the choice across all methods of voting."
            }
          }
        },
        "bits_voting": {
          "type": "object",
          "required": true,
          "description": "Not supported.",
          "fields": {
            "is_enabled": {
              "type": "boolean",
              "required": true,
              "description": "Not used; will be set to false."
            },
            "amount_per_vote": {
              "type": "number",
              "required": true,
              "description": "Not used; will be set to 0."
            }
          }
        },
        "channel_points_voting": {
          "type": "object",
          "required": true,
          "description": "The Channel Points voting settings for the poll.",
          "fields": {
            "is_enabled": {
              "type": "boolean",
              "required": true,
              "description": "Indicates if Channel Points can be used for voting."
            },
            "amount_per_vote": {
              "type": "number",
              "required": true,
              "description": "Number of Channel Points required to vote once with Channel Points."
            }
          }
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The time the poll started."
        },
        "ends_at": {
          "type": "string",
          "required": true,
          "description": "The time the poll will end."
        }
      }
    }
  },
  "channel.poll.progress@1": {
    "id": "channel.poll.progress@1",
    "label": "Channel Poll Progress",
    "type": "channel.poll.progress",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:polls", "channel:manage:polls"],
    "description": "users respond to a poll on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID of the channel for which \"poll progress\" notifications will be received."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "ID of the poll."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "title": {
          "type": "string",
          "required": true,
          "description": "Question displayed for the poll."
        },
        "choices": {
          "type": "object[]",
          "required": true,
          "description": "An array of choices for the poll. Includes vote counts.",
          "fields": {
            "id": {
              "type": "string",
              "required": true,
              "description": "ID for the choice."
            },
            "title": {
              "type": "string",
              "required": true,
              "description": "Text displayed for the choice."
            },
            "bits_votes": {
              "type": "number",
              "required": true,
              "description": "Not used; will be set to 0."
            },
            "channel_points_votes": {
              "type": "number",
              "required": true,
              "description": "Number of votes received via Channel Points."
            },
            "votes": {
              "type": "number",
              "required": true,
              "description": "Total number of votes received for the choice across all methods of voting."
            }
          }
        },
        "bits_voting": {
          "type": "object",
          "required": true,
          "description": "Not supported.",
          "fields": {
            "is_enabled": {
              "type": "boolean",
              "required": true,
              "description": "Not used; will be set to false."
            },
            "amount_per_vote": {
              "type": "number",
              "required": true,
              "description": "Not used; will be set to 0."
            }
          }
        },
        "channel_points_voting": {
          "type": "object",
          "required": true,
          "description": "The Channel Points voting settings for the poll.",
          "fields": {
            "is_enabled": {
              "type": "boolean",
              "required": true,
              "description": "Indicates if Channel Points can be used for voting."
            },
            "amount_per_vote": {
              "type": "number",
              "required": true,
              "description": "Number of Channel Points required to vote once with Channel Points."
            }
          }
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The time the poll started."
        },
        "ends_at": {
          "type": "string",
          "required": true,
          "description": "The time the poll will end."
        }
      }
    }
  },
  "channel.poll.end@1": {
    "id": "channel.poll.end@1",
    "label": "Channel Poll End",
    "type": "channel.poll.end",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:polls", "channel:manage:polls"],
    "description": "a poll ended on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID of the channel for which \"poll end\" notifications will be received."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "ID of the poll."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "title": {
          "type": "string",
          "required": true,
          "description": "Question displayed for the poll."
        },
        "choices": {
          "type": "object[]",
          "required": true,
          "description": "An array of choices for the poll. Includes vote counts.",
          "fields": {
            "id": {
              "type": "string",
              "required": true,
              "description": "ID for the choice."
            },
            "title": {
              "type": "string",
              "required": true,
              "description": "Text displayed for the choice."
            },
            "bits_votes": {
              "type": "number",
              "required": true,
              "description": "Not used; will be set to 0."
            },
            "channel_points_votes": {
              "type": "number",
              "required": true,
              "description": "Number of votes received via Channel Points."
            },
            "votes": {
              "type": "number",
              "required": true,
              "description": "Total number of votes received for the choice across all methods of voting."
            }
          }
        },
        "bits_voting": {
          "type": "object",
          "required": true,
          "description": "Not supported.",
          "fields": {
            "is_enabled": {
              "type": "boolean",
              "required": true,
              "description": "Not used; will be set to false."
            },
            "amount_per_vote": {
              "type": "number",
              "required": true,
              "description": "Not used; will be set to 0."
            }
          }
        },
        "channel_points_voting": {
          "type": "object",
          "required": true,
          "description": "The Channel Points voting settings for the poll.",
          "fields": {
            "is_enabled": {
              "type": "boolean",
              "required": true,
              "description": "Indicates if Channel Points can be used for voting."
            },
            "amount_per_vote": {
              "type": "number",
              "required": true,
              "description": "Number of Channel Points required to vote once with Channel Points."
            }
          }
        },
        "status": {
          "type": "string",
          "required": true,
          "description": "The status of the poll. Valid values are completed, archived, and terminated."
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The time the poll started."
        },
        "ended_at": {
          "type": "string",
          "required": true,
          "description": "The time the poll ended."
        }
      }
    }
  },
  "channel.prediction.begin@1": {
    "id": "channel.prediction.begin@1",
    "label": "Channel Prediction Begin",
    "type": "channel.prediction.begin",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:predictions", "channel:manage:predictions"],
    "description": "a Prediction started on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID of the channel for which \"prediction begin\" notifications will be received."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "Channel Points Prediction ID."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "title": {
          "type": "string",
          "required": true,
          "description": "Title for the Channel Points Prediction."
        },
        "outcomes": {
          "type": "object[]",
          "required": true,
          "description": "An array of outcomes for the Channel Points Prediction.",
          "fields": {
            "id": {
              "type": "string",
              "required": true,
              "description": "The outcome ID."
            },
            "title": {
              "type": "string",
              "required": true,
              "description": "The outcome title."
            },
            "color": {
              "type": "string",
              "required": true,
              "description": "The color for the outcome. Valid values are pink and blue."
            },
            "users": {
              "type": "number",
              "required": true,
              "description": "The number of users who used Channel Points on this outcome."
            },
            "channel_points": {
              "type": "number",
              "required": true,
              "description": "The total number of Channel Points used on this outcome."
            },
            "top_predictors": {
              "type": "object",
              "required": true,
              "description": "An array of users who used the most Channel Points on this outcome.",
              "fields": {
                "user_id": {
                  "type": "string",
                  "required": true,
                  "description": "The ID of the user."
                },
                "user_login": {
                  "type": "string",
                  "required": true,
                  "description": "The login of the user."
                },
                "user_name": {
                  "type": "string",
                  "required": true,
                  "description": "The display name of the user."
                },
                "channel_points_won": {
                  "type": "number",
                  "required": true,
                  "description": "The number of Channel Points won. This value is always null in the event payload for Prediction progress and Prediction lock. This value is 0 if the outcome did not win or if the Prediction was canceled and Channel Points were refunded."
                },
                "channel_points_used": {
                  "type": "number",
                  "required": true,
                  "description": "The number of Channel Points used to participate in the Prediction."
                }
              }
            }
          }
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The time the Channel Points Prediction started."
        },
        "locks_at": {
          "type": "string",
          "required": true,
          "description": "The time the Channel Points Prediction will automatically lock."
        }
      }
    }
  },
  "channel.prediction.progress@1": {
    "id": "channel.prediction.progress@1",
    "label": "Channel Prediction Progress",
    "type": "channel.prediction.progress",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:predictions", "channel:manage:predictions"],
    "description": "users participated in a Prediction on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID of the channel for which \"prediction progress\" notifications will be received."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "Channel Points Prediction ID."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "title": {
          "type": "string",
          "required": true,
          "description": "Title for the Channel Points Prediction."
        },
        "outcomes": {
          "type": "object[]",
          "required": true,
          "description": "An array of outcomes for the Channel Points Prediction. Includes top_predictors.",
          "fields": {
            "id": {
              "type": "string",
              "required": true,
              "description": "The outcome ID."
            },
            "title": {
              "type": "string",
              "required": true,
              "description": "The outcome title."
            },
            "color": {
              "type": "string",
              "required": true,
              "description": "The color for the outcome. Valid values are pink and blue."
            },
            "users": {
              "type": "number",
              "required": true,
              "description": "The number of users who used Channel Points on this outcome."
            },
            "channel_points": {
              "type": "number",
              "required": true,
              "description": "The total number of Channel Points used on this outcome."
            },
            "top_predictors": {
              "type": "object",
              "required": true,
              "description": "An array of users who used the most Channel Points on this outcome.",
              "fields": {
                "user_id": {
                  "type": "string",
                  "required": true,
                  "description": "The ID of the user."
                },
                "user_login": {
                  "type": "string",
                  "required": true,
                  "description": "The login of the user."
                },
                "user_name": {
                  "type": "string",
                  "required": true,
                  "description": "The display name of the user."
                },
                "channel_points_won": {
                  "type": "number",
                  "required": true,
                  "description": "The number of Channel Points won. This value is always null in the event payload for Prediction progress and Prediction lock. This value is 0 if the outcome did not win or if the Prediction was canceled and Channel Points were refunded."
                },
                "channel_points_used": {
                  "type": "number",
                  "required": true,
                  "description": "The number of Channel Points used to participate in the Prediction."
                }
              }
            }
          }
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The time the Channel Points Prediction started."
        },
        "locks_at": {
          "type": "string",
          "required": true,
          "description": "The time the Channel Points Prediction will automatically lock."
        }
      }
    }
  },
  "channel.prediction.lock@1": {
    "id": "channel.prediction.lock@1",
    "label": "Channel Prediction Lock",
    "type": "channel.prediction.lock",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:predictions", "channel:manage:predictions"],
    "description": "a Prediction was locked on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID of the channel for which \"prediction lock\" notifications will be received."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "Channel Points Prediction ID."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "title": {
          "type": "string",
          "required": true,
          "description": "Title for the Channel Points Prediction."
        },
        "outcomes": {
          "type": "object[]",
          "required": true,
          "description": "An array of outcomes for the Channel Points Prediction. Includes top_predictors.",
          "fields": {
            "id": {
              "type": "string",
              "required": true,
              "description": "The outcome ID."
            },
            "title": {
              "type": "string",
              "required": true,
              "description": "The outcome title."
            },
            "color": {
              "type": "string",
              "required": true,
              "description": "The color for the outcome. Valid values are pink and blue."
            },
            "users": {
              "type": "number",
              "required": true,
              "description": "The number of users who used Channel Points on this outcome."
            },
            "channel_points": {
              "type": "number",
              "required": true,
              "description": "The total number of Channel Points used on this outcome."
            },
            "top_predictors": {
              "type": "object",
              "required": true,
              "description": "An array of users who used the most Channel Points on this outcome.",
              "fields": {
                "user_id": {
                  "type": "string",
                  "required": true,
                  "description": "The ID of the user."
                },
                "user_login": {
                  "type": "string",
                  "required": true,
                  "description": "The login of the user."
                },
                "user_name": {
                  "type": "string",
                  "required": true,
                  "description": "The display name of the user."
                },
                "channel_points_won": {
                  "type": "number",
                  "required": true,
                  "description": "The number of Channel Points won. This value is always null in the event payload for Prediction progress and Prediction lock. This value is 0 if the outcome did not win or if the Prediction was canceled and Channel Points were refunded."
                },
                "channel_points_used": {
                  "type": "number",
                  "required": true,
                  "description": "The number of Channel Points used to participate in the Prediction."
                }
              }
            }
          }
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The time the Channel Points Prediction started."
        },
        "locked_at": {
          "type": "string",
          "required": true,
          "description": "The time the Channel Points Prediction was locked."
        }
      }
    }
  },
  "channel.prediction.end@1": {
    "id": "channel.prediction.end@1",
    "label": "Channel Prediction End",
    "type": "channel.prediction.end",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:predictions", "channel:manage:predictions"],
    "description": "a Prediction ended on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID of the channel for which \"prediction end\" notifications will be received."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "Channel Points Prediction ID."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "title": {
          "type": "string",
          "required": true,
          "description": "Title for the Channel Points Prediction."
        },
        "winning_outcome_id": {
          "type": "string",
          "required": true,
          "description": "ID of the winning outcome."
        },
        "outcomes": {
          "type": "object[]",
          "required": true,
          "description": "An array of outcomes for the Channel Points Prediction. Includes top_predictors.",
          "fields": {
            "id": {
              "type": "string",
              "required": true,
              "description": "The outcome ID."
            },
            "title": {
              "type": "string",
              "required": true,
              "description": "The outcome title."
            },
            "color": {
              "type": "string",
              "required": true,
              "description": "The color for the outcome. Valid values are pink and blue."
            },
            "users": {
              "type": "number",
              "required": true,
              "description": "The number of users who used Channel Points on this outcome."
            },
            "channel_points": {
              "type": "number",
              "required": true,
              "description": "The total number of Channel Points used on this outcome."
            },
            "top_predictors": {
              "type": "object",
              "required": true,
              "description": "An array of users who used the most Channel Points on this outcome.",
              "fields": {
                "user_id": {
                  "type": "string",
                  "required": true,
                  "description": "The ID of the user."
                },
                "user_login": {
                  "type": "string",
                  "required": true,
                  "description": "The login of the user."
                },
                "user_name": {
                  "type": "string",
                  "required": true,
                  "description": "The display name of the user."
                },
                "channel_points_won": {
                  "type": "number",
                  "required": true,
                  "description": "The number of Channel Points won. This value is always null in the event payload for Prediction progress and Prediction lock. This value is 0 if the outcome did not win or if the Prediction was canceled and Channel Points were refunded."
                },
                "channel_points_used": {
                  "type": "number",
                  "required": true,
                  "description": "The number of Channel Points used to participate in the Prediction."
                }
              }
            }
          }
        },
        "status": {
          "type": "string",
          "required": true,
          "description": "The status of the Channel Points Prediction. Valid values are resolved and canceled."
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The time the Channel Points Prediction started."
        },
        "ended_at": {
          "type": "string",
          "required": true,
          "description": "The time the Channel Points Prediction ended."
        }
      }
    }
  },
  "channel.suspicious_user.update@1": {
    "id": "channel.suspicious_user.update@1",
    "label": "Channel Suspicious User Update",
    "type": "channel.suspicious_user.update",
    "version": "1",
    "primary": true,
    "scopes": ["moderator:read:suspicious"],
    "description": "a suspicious user has been updated.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of a user that has permission to moderate the broadcaster's channel and has granted your app permission to subscribe to this subscription type."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster you want to get chat unban request notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the channel where the treatment for a suspicious user was updated."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the channel where the treatment for a suspicious user was updated."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The Login of the channel where the treatment for a suspicious user was updated."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the moderator that updated the treatment for a suspicious user."
        },
        "moderator_user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the moderator that updated the treatment for a suspicious user."
        },
        "moderator_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the moderator that updated the treatment for a suspicious user."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the suspicious user whose treatment was updated."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the suspicious user whose treatment was updated."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the suspicious user whose treatment was updated."
        },
        "low_trust_status": {
          "type": "string",
          "required": true,
          "description": "The status set for the suspicious user. Can be the following: \"none\", \"active_monitoring\", or \"restricted\"."
        }
      }
    }
  },
  "channel.suspicious_user.message@1": {
    "id": "channel.suspicious_user.message@1",
    "label": "Channel Suspicious User Message",
    "type": "channel.suspicious_user.message",
    "version": "1",
    "primary": true,
    "scopes": ["moderator:read:suspicious"],
    "description": "a chat message has been sent by a suspicious user.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of a user that has permission to moderate the broadcaster's channel and has granted your app permission to subscribe to this subscription type."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "User ID of the channel to receive chat message events for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the channel where the treatment for a suspicious user was updated."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the channel where the treatment for a suspicious user was updated."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the channel where the treatment for a suspicious user was updated."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the user that sent the message."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the user that sent the message."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The user login of the user that sent the message."
        },
        "low_trust_status": {
          "type": "string",
          "required": true,
          "description": "The status set for the suspicious user. Can be the following: \"none\", \"active_monitoring\", or \"restricted\""
        },
        "shared_ban_channel_ids": {
          "type": "string[]",
          "required": true,
          "description": "A list of channel IDs where the suspicious user is also banned."
        },
        "types": {
          "type": "string[]",
          "required": true,
          "description": "User types (if any) that apply to the suspicious user, can be \"manually_added\", \"ban_evader\", or \"banned_in_shared_channel\"."
        },
        "ban_evasion_evaluation": {
          "type": "string",
          "required": true,
          "description": "A ban evasion likelihood value (if any) that as been applied to the user automatically by Twitch, can be \"unknown\", \"possible\", or \"likely\"."
        },
        "message": {
          "type": "object",
          "required": true,
          "description": "The structured chat message.",
          "fields": {
            "message_id": {
              "type": "string",
              "required": true,
              "description": "The UUID that identifies the message."
            },
            "text": {
              "type": "string",
              "required": true,
              "description": "The chat message in plain text."
            },
            "fragments": {
              "type": "object[]",
              "required": true,
              "description": "Ordered list of chat message fragments.",
              "fields": {
                "type": {
                  "type": "string",
                  "required": true,
                  "description": "The type of message fragment. Possible values: -text -cheermote -emote"
                },
                "text": {
                  "type": "string",
                  "required": true,
                  "description": "Message text in fragment."
                },
                "cheermote": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the cheermote.",
                  "fields": {
                    "prefix": {
                      "type": "string",
                      "required": true,
                      "description": "The name portion of the Cheermote string that you use in chat to cheer Bits. The full Cheermote string is the concatenation of {prefix} + {number of Bits}."
                    },
                    "bits": {
                      "type": "string",
                      "required": true,
                      "description": "The amount of Bits cheered."
                    },
                    "tier": {
                      "type": "string",
                      "required": true,
                      "description": "The tier level of the cheermote."
                    }
                  }
                },
                "emote": {
                  "type": "object",
                  "required": false,
                  "description": "Metadata pertaining to the emote.",
                  "fields": {
                    "id": {
                      "type": "string",
                      "required": true,
                      "description": "An ID that uniquely identifies this emote."
                    },
                    "emote_set_id": {
                      "type": "string",
                      "required": true,
                      "description": "An ID that identifies the emote set that the emote belongs to."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "channel.vip.add@1": {
    "id": "channel.vip.add@1",
    "label": "Channel VIP Add",
    "type": "channel.vip.add",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:vips", "channel:manage:vips"],
    "description": "a VIP is added to the channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the broadcaster (channel) Maximum: 1"
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the user who was added as a VIP."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the user who was added as a VIP."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the user who was added as a VIP."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the broadcaster."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the broadcaster."
        }
      }
    }
  },
  "channel.vip.remove@1": {
    "id": "channel.vip.remove@1",
    "label": "Channel VIP Remove",
    "type": "channel.vip.remove",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:vips", "channel:manage:vips"],
    "description": "a VIP is removed from the channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the broadcaster (channel) Maximum: 1"
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the user who was removed as a VIP."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the user who was removed as a VIP."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the user who was removed as a VIP."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the broadcaster."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the broadcaster."
        }
      }
    }
  },
  "channel.warning.acknowledge@1": {
    "id": "channel.warning.acknowledge@1",
    "label": "Channel Warning Acknowledgement",
    "type": "channel.warning.acknowledge",
    "version": "1",
    "primary": true,
    "scopes": ["moderator:read:warnings", "moderator:manage:warnings"],
    "description": "a user awknowledges a warning. Broadcasters and moderators can see the warning's details.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the broadcaster."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the moderator."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the broadcaster."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the broadcaster."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the broadcaster."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the user that has acknowledged their warning."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the user that has acknowledged their warning."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the user that has acknowledged their warning."
        }
      }
    }
  },
  "channel.warning.send@1": {
    "id": "channel.warning.send@1",
    "label": "Channel Warning Send",
    "type": "channel.warning.send",
    "version": "1",
    "primary": true,
    "scopes": ["moderator:read:warnings", "moderator:manage:warnings"],
    "description": "a user is sent a warning. Broadcasters and moderators can see the warning's details.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the broadcaster."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the moderator."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the broadcaster."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the broadcaster."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the broadcaster."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID of the moderator who sent the warning."
        },
        "moderator_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the moderator."
        },
        "moderator_user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the moderator."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the user being warned."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the user being warned."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The user name of the user being."
        },
        "reason": {
          "type": "string",
          "required": false,
          "description": "The reason given for the warning."
        },
        "chat_rules_cited": {
          "type": "string[]",
          "required": false,
          "description": "The chat rules cited for the warning."
        }
      }
    }
  },
  "channel.hype_train.begin@1": {
    "id": "channel.hype_train.begin@1",
    "label": "Hype Train Begin",
    "type": "channel.hype_train.begin",
    "version": "1",
    "primary": false,
    "scopes": ["channel:read:hype"],
    "description": "a Hype Train begins on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster that you want to get Hype Train begin notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "The Hype Train ID."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "total": {
          "type": "number",
          "required": true,
          "description": "Total points contributed to the Hype Train."
        },
        "progress": {
          "type": "number",
          "required": true,
          "description": "The number of points contributed to the Hype Train at the current level."
        },
        "goal": {
          "type": "number",
          "required": true,
          "description": "The number of points required to reach the next level."
        },
        "top_contributions": {
          "type": "object",
          "required": true,
          "description": "The contributors with the most points contributed.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user that made the contribution."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The user's login name."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user's display name."
            },
            "type": {
              "type": "string",
              "required": true,
              "description": "The contribution method used. Possible values are:\n- bits - Bits contributions with Cheering, Power-ups, and Extensions.\n- subscription - Subscription activity like subscribing or gifting subscriptions.\n- other - Covers other contribution methods not listed."
            },
            "total": {
              "type": "number",
              "required": true,
              "description": "The total amount contributed. If type is bits, total represents the amount of Bits used. If type is subscription, total is 500, 1000, or 2500 to represent tier 1, 2, or 3 subscriptions, respectively."
            }
          }
        },
        "last_contribution": {
          "type": "object",
          "required": true,
          "description": "The most recent contribution.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user that made the contribution."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The user's login name."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user's display name."
            },
            "type": {
              "type": "string",
              "required": true,
              "description": "The contribution method used. Possible values are:\n- bits — Cheering with Bits.\n- subscription — Subscription activity like subscribing or gifting subscriptions.\n- other — Covers other contribution methods not listed."
            },
            "total": {
              "type": "number",
              "required": true,
              "description": "The total amount contributed. If type is bits, total represents the amount of Bits used. If type is subscription, total is 500, 1000, or 2500 to represent tier 1, 2, or 3 subscriptions, respectively."
            }
          }
        },
        "level": {
          "type": "number",
          "required": true,
          "description": "The starting level of the Hype Train."
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The time when the Hype Train started."
        },
        "expires_at": {
          "type": "string",
          "required": true,
          "description": "The time when the Hype Train expires. The expiration is extended when the Hype Train reaches a new level."
        },
        "is_golden_kappa_train": {
          "type": "boolean",
          "required": true,
          "description": "Indicates if the Hype Train is a Golden Kappa Train."
        }
      }
    }
  },
  "channel.hype_train.begin@2": {
    "id": "channel.hype_train.begin@2",
    "label": "Hype Train Begin V2",
    "type": "channel.hype_train.begin",
    "version": "2",
    "primary": true,
    "scopes": ["channel:read:hype"],
    "description": "a Hype Train begins on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster that you want to get Hype Train begin notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "The Hype Train ID."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "total": {
          "type": "number",
          "required": true,
          "description": "Total points contributed to the Hype Train."
        },
        "progress": {
          "type": "number",
          "required": true,
          "description": "The number of points contributed to the Hype Train at the current level."
        },
        "goal": {
          "type": "number",
          "required": true,
          "description": "The number of points required to reach the next level."
        },
        "top_contributions": {
          "type": "object",
          "required": true,
          "description": "The contributors with the most points contributed.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user that made the contribution."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The user's login name."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user's display name."
            },
            "type": {
              "type": "string",
              "required": true,
              "description": "The contribution method used. Possible values are:\n- bits - Bits contributions with Cheering, Power-ups, and Extensions.\n- subscription - Subscription activity like subscribing or gifting subscriptions.\n- other - Covers other contribution methods not listed."
            },
            "total": {
              "type": "number",
              "required": true,
              "description": "The total amount contributed. If type is bits, total represents the amount of Bits used. If type is subscription, total is 500, 1000, or 2500 to represent tier 1, 2, or 3 subscriptions, respectively."
            }
          }
        },
        "last_contribution": {
          "type": "object",
          "required": true,
          "description": "The most recent contribution.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user that made the contribution."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The user's login name."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user's display name."
            },
            "type": {
              "type": "string",
              "required": true,
              "description": "The contribution method used. Possible values are:\n- bits — Cheering with Bits.\n- subscription — Subscription activity like subscribing or gifting subscriptions.\n- other — Covers other contribution methods not listed."
            },
            "total": {
              "type": "number",
              "required": true,
              "description": "The total amount contributed. If type is bits, total represents the amount of Bits used. If type is subscription, total is 500, 1000, or 2500 to represent tier 1, 2, or 3 subscriptions, respectively."
            }
          }
        },
        "level": {
          "type": "number",
          "required": true,
          "description": "The starting level of the Hype Train."
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The time when the Hype Train started."
        },
        "expires_at": {
          "type": "string",
          "required": true,
          "description": "The time when the Hype Train expires. The expiration is extended when the Hype Train reaches a new level."
        },
        "is_golden_kappa_train": {
          "type": "boolean",
          "required": true,
          "description": "Indicates if the Hype Train is a Golden Kappa Train."
        }
      }
    }
  },
  "channel.hype_train.progress@1": {
    "id": "channel.hype_train.progress@1",
    "label": "Hype Train Progress",
    "type": "channel.hype_train.progress",
    "version": "1",
    "primary": false,
    "scopes": ["channel:read:hype"],
    "description": "a Hype Train makes progress on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster that you want to get Hype Train progress notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "The Hype Train ID."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "level": {
          "type": "number",
          "required": true,
          "description": "The current level of the Hype Train."
        },
        "total": {
          "type": "number",
          "required": true,
          "description": "Total points contributed to the Hype Train."
        },
        "progress": {
          "type": "number",
          "required": true,
          "description": "The number of points contributed to the Hype Train at the current level."
        },
        "goal": {
          "type": "number",
          "required": true,
          "description": "The number of points required to reach the next level."
        },
        "top_contributions": {
          "type": "object",
          "required": true,
          "description": "The contributors with the most points contributed.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user that made the contribution."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The user's login name."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user's display name."
            },
            "type": {
              "type": "string",
              "required": true,
              "description": "The contribution method used. Possible values are:\n- bits - Bits contributions with Cheering, Power-ups, and Extensions.\n- subscription - Subscription activity like subscribing or gifting subscriptions.\n- other - Covers other contribution methods not listed."
            },
            "total": {
              "type": "number",
              "required": true,
              "description": "The total amount contributed. If type is bits, total represents the amount of Bits used. If type is subscription, total is 500, 1000, or 2500 to represent tier 1, 2, or 3 subscriptions, respectively."
            }
          }
        },
        "last_contribution": {
          "type": "object",
          "required": true,
          "description": "The most recent contribution.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user that made the contribution."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The user's login name."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user's display name."
            },
            "type": {
              "type": "string",
              "required": true,
              "description": "The contribution method used. Possible values are:\n- bits — Cheering with Bits.\n- subscription — Subscription activity like subscribing or gifting subscriptions.\n- other — Covers other contribution methods not listed."
            },
            "total": {
              "type": "number",
              "required": true,
              "description": "The total amount contributed. If type is bits, total represents the amount of Bits used. If type is subscription, total is 500, 1000, or 2500 to represent tier 1, 2, or 3 subscriptions, respectively."
            }
          }
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The time when the Hype Train started."
        },
        "expires_at": {
          "type": "string",
          "required": true,
          "description": "The time when the Hype Train expires. The expiration is extended when the Hype Train reaches a new level."
        },
        "is_golden_kappa_train": {
          "type": "boolean",
          "required": true,
          "description": "Indicates if the Hype Train is a Golden Kappa Train."
        }
      }
    }
  },
  "channel.hype_train.progress@2": {
    "id": "channel.hype_train.progress@2",
    "label": "Hype Train Progress V2",
    "type": "channel.hype_train.progress",
    "version": "2",
    "primary": true,
    "scopes": ["channel:read:hype"],
    "description": "a Hype Train makes progress on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster that you want to get Hype Train progress notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "The Hype Train ID."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "level": {
          "type": "number",
          "required": true,
          "description": "The current level of the Hype Train."
        },
        "total": {
          "type": "number",
          "required": true,
          "description": "Total points contributed to the Hype Train."
        },
        "progress": {
          "type": "number",
          "required": true,
          "description": "The number of points contributed to the Hype Train at the current level."
        },
        "goal": {
          "type": "number",
          "required": true,
          "description": "The number of points required to reach the next level."
        },
        "top_contributions": {
          "type": "object",
          "required": true,
          "description": "The contributors with the most points contributed.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user that made the contribution."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The user's login name."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user's display name."
            },
            "type": {
              "type": "string",
              "required": true,
              "description": "The contribution method used. Possible values are:\n- bits - Bits contributions with Cheering, Power-ups, and Extensions.\n- subscription - Subscription activity like subscribing or gifting subscriptions.\n- other - Covers other contribution methods not listed."
            },
            "total": {
              "type": "number",
              "required": true,
              "description": "The total amount contributed. If type is bits, total represents the amount of Bits used. If type is subscription, total is 500, 1000, or 2500 to represent tier 1, 2, or 3 subscriptions, respectively."
            }
          }
        },
        "last_contribution": {
          "type": "object",
          "required": true,
          "description": "The most recent contribution.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user that made the contribution."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The user's login name."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user's display name."
            },
            "type": {
              "type": "string",
              "required": true,
              "description": "The contribution method used. Possible values are:\n- bits — Cheering with Bits.\n- subscription — Subscription activity like subscribing or gifting subscriptions.\n- other — Covers other contribution methods not listed."
            },
            "total": {
              "type": "number",
              "required": true,
              "description": "The total amount contributed. If type is bits, total represents the amount of Bits used. If type is subscription, total is 500, 1000, or 2500 to represent tier 1, 2, or 3 subscriptions, respectively."
            }
          }
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The time when the Hype Train started."
        },
        "expires_at": {
          "type": "string",
          "required": true,
          "description": "The time when the Hype Train expires. The expiration is extended when the Hype Train reaches a new level."
        },
        "is_golden_kappa_train": {
          "type": "boolean",
          "required": true,
          "description": "Indicates if the Hype Train is a Golden Kappa Train."
        }
      }
    }
  },
  "channel.hype_train.end@1": {
    "id": "channel.hype_train.end@1",
    "label": "Hype Train End",
    "type": "channel.hype_train.end",
    "version": "1",
    "primary": false,
    "scopes": ["channel:read:hype"],
    "description": "a Hype Train ends on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster that you want to get Hype Train end notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "The Hype Train ID."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "level": {
          "type": "number",
          "required": true,
          "description": "The final level of the Hype Train."
        },
        "total": {
          "type": "number",
          "required": true,
          "description": "Total points contributed to the Hype Train."
        },
        "top_contributions": {
          "type": "object",
          "required": true,
          "description": "The contributors with the most points contributed.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user that made the contribution."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The user's login name."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user's display name."
            },
            "type": {
              "type": "string",
              "required": true,
              "description": "The contribution method used. Possible values are:\n- bits - Bits contributions with Cheering, Power-ups, and Extensions.\n- subscription - Subscription activity like subscribing or gifting subscriptions.\n- other - Covers other contribution methods not listed."
            },
            "total": {
              "type": "number",
              "required": true,
              "description": "The total amount contributed. If type is bits, total represents the amount of Bits used. If type is subscription, total is 500, 1000, or 2500 to represent tier 1, 2, or 3 subscriptions, respectively."
            }
          }
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The time when the Hype Train started."
        },
        "ended_at": {
          "type": "string",
          "required": true,
          "description": "The time when the Hype Train ended."
        },
        "cooldown_ends_at": {
          "type": "string",
          "required": true,
          "description": "The time when the Hype Train cooldown ends so that the next Hype Train can start."
        },
        "is_golden_kappa_train": {
          "type": "boolean",
          "required": true,
          "description": "Indicates if the Hype Train is a Golden Kappa Train."
        }
      }
    }
  },
  "channel.hype_train.end@2": {
    "id": "channel.hype_train.end@2",
    "label": "Hype Train End V2",
    "type": "channel.hype_train.end",
    "version": "2",
    "primary": true,
    "scopes": ["channel:read:hype"],
    "description": "a Hype Train ends on the specified channel.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster that you want to get Hype Train end notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "The Hype Train ID."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The requested broadcaster display name."
        },
        "level": {
          "type": "number",
          "required": true,
          "description": "The final level of the Hype Train."
        },
        "total": {
          "type": "number",
          "required": true,
          "description": "Total points contributed to the Hype Train."
        },
        "top_contributions": {
          "type": "object",
          "required": true,
          "description": "The contributors with the most points contributed.",
          "fields": {
            "user_id": {
              "type": "string",
              "required": true,
              "description": "The ID of the user that made the contribution."
            },
            "user_login": {
              "type": "string",
              "required": true,
              "description": "The user's login name."
            },
            "user_name": {
              "type": "string",
              "required": true,
              "description": "The user's display name."
            },
            "type": {
              "type": "string",
              "required": true,
              "description": "The contribution method used. Possible values are:\n- bits - Bits contributions with Cheering, Power-ups, and Extensions.\n- subscription - Subscription activity like subscribing or gifting subscriptions.\n- other - Covers other contribution methods not listed."
            },
            "total": {
              "type": "number",
              "required": true,
              "description": "The total amount contributed. If type is bits, total represents the amount of Bits used. If type is subscription, total is 500, 1000, or 2500 to represent tier 1, 2, or 3 subscriptions, respectively."
            }
          }
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The time when the Hype Train started."
        },
        "ended_at": {
          "type": "string",
          "required": true,
          "description": "The time when the Hype Train ended."
        },
        "cooldown_ends_at": {
          "type": "string",
          "required": true,
          "description": "The time when the Hype Train cooldown ends so that the next Hype Train can start."
        },
        "is_golden_kappa_train": {
          "type": "boolean",
          "required": true,
          "description": "Indicates if the Hype Train is a Golden Kappa Train."
        }
      }
    }
  },
  "channel.charity_campaign.donate@1": {
    "id": "channel.charity_campaign.donate@1",
    "label": "Charity Donation",
    "type": "channel.charity_campaign.donate",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:charity"],
    "description": "a user donates to the broadcaster's charity campaign.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster that you want to receive notifications about when users donate to their campaign."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the donation. The ID is unique across campaigns."
        },
        "campaign_id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the charity campaign."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the broadcaster that's running the campaign."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's login name."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's display name."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the user that donated to the campaign."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The user's login name."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The user's display name."
        },
        "charity_name": {
          "type": "string",
          "required": true,
          "description": "The charity's name."
        },
        "charity_description": {
          "type": "string",
          "required": true,
          "description": "A description of the charity."
        },
        "charity_logo": {
          "type": "string",
          "required": true,
          "description": "A URL to an image of the charity's logo. The image's type is PNG and its size is 100px X 100px."
        },
        "charity_website": {
          "type": "string",
          "required": true,
          "description": "A URL to the charity's website."
        },
        "amount": {
          "type": "object",
          "required": true,
          "description": "An object that contains the amount of money that the user donated.",
          "fields": {
            "value": {
              "type": "number",
              "required": true,
              "description": "The monetary amount. The amount is specified in the currency's minor unit."
            },
            "decimal_places": {
              "type": "number",
              "required": true,
              "description": "The number of decimal places used by the currency.\n\nvalue / 10^decimal_places"
            },
            "currency": {
              "type": "string",
              "required": true,
              "description": "The ISO-4217 three-letter currency code that identifies the type of currency in value."
            }
          }
        }
      }
    }
  },
  "channel.charity_campaign.start@1": {
    "id": "channel.charity_campaign.start@1",
    "label": "Charity Campaign Start",
    "type": "channel.charity_campaign.start",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:charity"],
    "description": "the broadcaster starts a charity campaign.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster that you want to receive notifications about when they start a charity campaign."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the charity campaign."
        },
        "broadcaster_id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the broadcaster that's running the campaign."
        },
        "broadcaster_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's login name."
        },
        "broadcaster_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's display name."
        },
        "charity_name": {
          "type": "string",
          "required": true,
          "description": "The charity's name."
        },
        "charity_description": {
          "type": "string",
          "required": true,
          "description": "A description of the charity."
        },
        "charity_logo": {
          "type": "string",
          "required": true,
          "description": "A URL to an image of the charity's logo. The image's type is PNG and its size is 100px X 100px."
        },
        "charity_website": {
          "type": "string",
          "required": true,
          "description": "A URL to the charity's website."
        },
        "current_amount": {
          "type": "object",
          "required": true,
          "description": "An object that contains the current amount of donations that the campaign has received.",
          "fields": {
            "value": {
              "type": "number",
              "required": true,
              "description": "The monetary amount. The amount is specified in the currency's minor unit."
            },
            "decimal_places": {
              "type": "number",
              "required": true,
              "description": "The number of decimal places used by the currency.\n\nvalue / 10^decimal_places"
            },
            "currency": {
              "type": "string",
              "required": true,
              "description": "The ISO-4217 three-letter currency code that identifies the type of currency in value."
            }
          }
        },
        "target_amount": {
          "type": "object",
          "required": true,
          "description": "An object that contains the campaign's target fundraising goal.",
          "fields": {
            "value": {
              "type": "number",
              "required": true,
              "description": "The monetary amount. The amount is specified in the currency's minor unit."
            },
            "decimal_places": {
              "type": "number",
              "required": true,
              "description": "The number of decimal places used by the currency.\n\nvalue / 10^decimal_places"
            },
            "currency": {
              "type": "string",
              "required": true,
              "description": "The ISO-4217 three-letter currency code that identifies the type of currency in value."
            }
          }
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The UTC timestamp (in RFC3339 format) of when the broadcaster started the campaign."
        }
      }
    }
  },
  "channel.charity_campaign.progress@1": {
    "id": "channel.charity_campaign.progress@1",
    "label": "Charity Campaign Progress",
    "type": "channel.charity_campaign.progress",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:charity"],
    "description": "progress is made towards the campaign's goal or the broadcaster changes the fundraising goal.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster that you want to receive notifications about when their campaign makes progress or is updated."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the charity campaign."
        },
        "broadcaster_id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the broadcaster that's running the campaign."
        },
        "broadcaster_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's login name."
        },
        "broadcaster_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's display name."
        },
        "charity_name": {
          "type": "string",
          "required": true,
          "description": "The charity's name."
        },
        "charity_description": {
          "type": "string",
          "required": true,
          "description": "A description of the charity."
        },
        "charity_logo": {
          "type": "string",
          "required": true,
          "description": "A URL to an image of the charity's logo. The image's type is PNG and its size is 100px X 100px."
        },
        "charity_website": {
          "type": "string",
          "required": true,
          "description": "A URL to the charity's website."
        },
        "current_amount": {
          "type": "object",
          "required": true,
          "description": "An object that contains the current amount of donations that the campaign has received.",
          "fields": {
            "value": {
              "type": "number",
              "required": true,
              "description": "The monetary amount. The amount is specified in the currency's minor unit."
            },
            "decimal_places": {
              "type": "number",
              "required": true,
              "description": "The number of decimal places used by the currency.\n\nvalue / 10^decimal_places"
            },
            "currency": {
              "type": "string",
              "required": true,
              "description": "The ISO-4217 three-letter currency code that identifies the type of currency in value."
            }
          }
        },
        "target_amount": {
          "type": "object",
          "required": true,
          "description": "An object that contains the campaign's target fundraising goal.",
          "fields": {
            "value": {
              "type": "number",
              "required": true,
              "description": "The monetary amount. The amount is specified in the currency's minor unit."
            },
            "decimal_places": {
              "type": "number",
              "required": true,
              "description": "The number of decimal places used by the currency.\n\nvalue / 10^decimal_places"
            },
            "currency": {
              "type": "string",
              "required": true,
              "description": "The ISO-4217 three-letter currency code that identifies the type of currency in value."
            }
          }
        }
      }
    }
  },
  "channel.charity_campaign.stop@1": {
    "id": "channel.charity_campaign.stop@1",
    "label": "Charity Campaign Stop",
    "type": "channel.charity_campaign.stop",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:charity"],
    "description": "the broadcaster stops a charity campaign.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster that you want to receive notifications about when they stop a charity campaign."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the charity campaign."
        },
        "broadcaster_id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the broadcaster that ran the campaign."
        },
        "broadcaster_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's login name."
        },
        "broadcaster_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's display name."
        },
        "charity_name": {
          "type": "string",
          "required": true,
          "description": "The charity's name."
        },
        "charity_description": {
          "type": "string",
          "required": true,
          "description": "A description of the charity."
        },
        "charity_logo": {
          "type": "string",
          "required": true,
          "description": "A URL to an image of the charity's logo. The image's type is PNG and its size is 100px X 100px."
        },
        "charity_website": {
          "type": "string",
          "required": true,
          "description": "A URL to the charity's website."
        },
        "current_amount": {
          "type": "object",
          "required": true,
          "description": "An object that contains the final amount of donations that the campaign received.",
          "fields": {
            "value": {
              "type": "number",
              "required": true,
              "description": "The monetary amount. The amount is specified in the currency's minor unit."
            },
            "decimal_places": {
              "type": "number",
              "required": true,
              "description": "The number of decimal places used by the currency.\n\nvalue / 10^decimal_places"
            },
            "currency": {
              "type": "string",
              "required": true,
              "description": "The ISO-4217 three-letter currency code that identifies the type of currency in value."
            }
          }
        },
        "target_amount": {
          "type": "object",
          "required": true,
          "description": "An object that contains the campaign's target fundraising goal.",
          "fields": {
            "value": {
              "type": "number",
              "required": true,
              "description": "The monetary amount. The amount is specified in the currency's minor unit."
            },
            "decimal_places": {
              "type": "number",
              "required": true,
              "description": "The number of decimal places used by the currency.\n\nvalue / 10^decimal_places"
            },
            "currency": {
              "type": "string",
              "required": true,
              "description": "The ISO-4217 three-letter currency code that identifies the type of currency in value."
            }
          }
        },
        "stopped_at": {
          "type": "string",
          "required": true,
          "description": "The UTC timestamp (in RFC3339 format) of when the broadcaster stopped the campaign."
        }
      }
    }
  },
  "channel.shared_chat.begin@1": {
    "id": "channel.shared_chat.begin@1",
    "label": "Channel Shared Chat Session Begin",
    "type": "channel.shared_chat.begin",
    "version": "1",
    "primary": true,
    "scopes": [],
    "description": "a channel becomes active in an active shared chat session.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the channel to receive shared chat session begin events for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "session_id": {
          "type": "string",
          "required": true,
          "description": "The unique identifier for the shared chat session."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the channel in the subscription condition which is now active in the shared chat session."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the channel in the subscription condition which is now active in the shared chat session."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The user login of the channel in the subscription condition which is now active in the shared chat session."
        },
        "host_broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the host channel."
        },
        "host_broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the host channel."
        },
        "host_broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The user login of the host channel."
        },
        "participants": {
          "type": "object",
          "required": true,
          "description": "The list of participants in the session.",
          "fields": {
            "broadcaster_user_id": {
              "type": "string",
              "required": true,
              "description": "The User ID of the participant channel."
            },
            "broadcaster_user_name": {
              "type": "string",
              "required": true,
              "description": "The display name of the participant channel."
            },
            "broadcaster_user_login": {
              "type": "string",
              "required": true,
              "description": "The user login of the participant channel."
            }
          }
        }
      }
    }
  },
  "channel.shared_chat.update@1": {
    "id": "channel.shared_chat.update@1",
    "label": "Channel Shared Chat Session Update",
    "type": "channel.shared_chat.update",
    "version": "1",
    "primary": true,
    "scopes": [],
    "description": "the active shared chat session the channel is in changes.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the channel to receive shared chat session update events for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "session_id": {
          "type": "string",
          "required": true,
          "description": "The unique identifier for the shared chat session."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the channel in the subscription condition."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the channel in the subscription condition."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The user login of the channel in the subscription condition."
        },
        "host_broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the host channel."
        },
        "host_broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the host channel."
        },
        "host_broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The user login of the host channel."
        },
        "participants": {
          "type": "object",
          "required": true,
          "description": "The list of participants in the session.",
          "fields": {
            "broadcaster_user_id": {
              "type": "string",
              "required": true,
              "description": "The User ID of the participant channel."
            },
            "broadcaster_user_name": {
              "type": "string",
              "required": true,
              "description": "The display name of the participant channel."
            },
            "broadcaster_user_login": {
              "type": "string",
              "required": true,
              "description": "The user login of the participant channel."
            }
          }
        }
      }
    }
  },
  "channel.shared_chat.end@1": {
    "id": "channel.shared_chat.end@1",
    "label": "Channel Shared Chat Session End",
    "type": "channel.shared_chat.end",
    "version": "1",
    "primary": true,
    "scopes": [],
    "description": "a channel leaves a shared chat session or the session ends.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the channel to receive shared chat session end events for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "session_id": {
          "type": "string",
          "required": true,
          "description": "The unique identifier for the shared chat session."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the channel in the subscription condition which is no longer active in the shared chat session."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the channel in the subscription condition which is no longer active in the shared chat session."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The user login of the channel in the subscription condition which is no longer active in the shared chat session."
        },
        "host_broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The User ID of the host channel."
        },
        "host_broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The display name of the host channel."
        },
        "host_broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The user login of the host channel."
        }
      }
    }
  },
  "channel.shield_mode.begin@1": {
    "id": "channel.shield_mode.begin@1",
    "label": "Shield Mode Begin",
    "type": "channel.shield_mode.begin",
    "version": "1",
    "primary": true,
    "scopes": ["moderator:read:shield", "moderator:manage:shield"],
    "description": "the broadcaster activates Shield Mode.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster that you want to receive notifications about when they activate Shield Mode."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster or one of the broadcaster's moderators."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the broadcaster whose Shield Mode status was updated."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's login name."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's display name."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the moderator that updated the Shield Mode's status. If the broadcaster updated the status, this ID will be the same as broadcaster_user_id."
        },
        "moderator_user_login": {
          "type": "string",
          "required": true,
          "description": "The moderator's login name."
        },
        "moderator_user_name": {
          "type": "string",
          "required": true,
          "description": "The moderator's display name."
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The UTC timestamp (in RFC3339 format) of when the moderator activated Shield Mode. The object includes this field only for channel.shield_mode.begin events."
        },
        "ended_at": {
          "type": "string",
          "required": true,
          "description": "The UTC timestamp (in RFC3339 format) of when the moderator deactivated Shield Mode. The object includes this field only for channel.shield_mode.end events."
        }
      }
    }
  },
  "channel.shield_mode.end@1": {
    "id": "channel.shield_mode.end@1",
    "label": "Shield Mode End",
    "type": "channel.shield_mode.end",
    "version": "1",
    "primary": true,
    "scopes": ["moderator:read:shield", "moderator:manage:shield"],
    "description": "the broadcaster deactivates Shield Mode.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster that you want to receive notifications about when they deactivate Shield Mode."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster or one of the broadcaster's moderators."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the broadcaster whose Shield Mode status was updated."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's login name."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's display name."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the moderator that updated the Shield Mode's status. If the broadcaster updated the status, this ID will be the same as broadcaster_user_id."
        },
        "moderator_user_login": {
          "type": "string",
          "required": true,
          "description": "The moderator's login name."
        },
        "moderator_user_name": {
          "type": "string",
          "required": true,
          "description": "The moderator's display name."
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The UTC timestamp (in RFC3339 format) of when the moderator activated Shield Mode. The object includes this field only for channel.shield_mode.begin events."
        },
        "ended_at": {
          "type": "string",
          "required": true,
          "description": "The UTC timestamp (in RFC3339 format) of when the moderator deactivated Shield Mode. The object includes this field only for channel.shield_mode.end events."
        }
      }
    }
  },
  "channel.shoutout.create@1": {
    "id": "channel.shoutout.create@1",
    "label": "Shoutout Create",
    "type": "channel.shoutout.create",
    "version": "1",
    "primary": true,
    "scopes": ["moderator:read:shoutouts", "moderator:manage:shoutouts"],
    "description": "the specified broadcaster sends a Shoutout.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster that you want to receive notifications about when they send a Shoutout."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster that gave the Shoutout or one of the broadcaster's moderators."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the broadcaster that sent the Shoutout."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's login name."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's display name."
        },
        "to_broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the broadcaster that received the Shoutout."
        },
        "to_broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's login name."
        },
        "to_broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's display name."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the moderator that sent the Shoutout. If the broadcaster sent the Shoutout, this ID is the same as the ID in broadcaster_user_id."
        },
        "moderator_user_login": {
          "type": "string",
          "required": true,
          "description": "The moderator's login name."
        },
        "moderator_user_name": {
          "type": "string",
          "required": true,
          "description": "The moderator's display name."
        },
        "viewer_count": {
          "type": "number",
          "required": true,
          "description": "The number of users that were watching the broadcaster's stream at the time of the Shoutout."
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The UTC timestamp (in RFC3339 format) of when the moderator sent the Shoutout."
        },
        "cooldown_ends_at": {
          "type": "string",
          "required": true,
          "description": "The UTC timestamp (in RFC3339 format) of when the broadcaster may send a Shoutout to a different broadcaster."
        },
        "target_cooldown_ends_at": {
          "type": "string",
          "required": true,
          "description": "The UTC timestamp (in RFC3339 format) of when the broadcaster may send another Shoutout to the broadcaster in to_broadcaster_user_id."
        }
      }
    }
  },
  "channel.shoutout.receive@1": {
    "id": "channel.shoutout.receive@1",
    "label": "Shoutout Received",
    "type": "channel.shoutout.receive",
    "version": "1",
    "primary": true,
    "scopes": ["moderator:read:shoutouts", "moderator:manage:shoutouts"],
    "description": "the specified broadcaster receives a Shoutout.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster that you want to receive notifications about when they receive a Shoutout."
        },
        "moderator_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster that received the Shoutout or one of the broadcaster's moderators."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the broadcaster that received the Shoutout."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's login name."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's display name."
        },
        "from_broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies the broadcaster that sent the Shoutout."
        },
        "from_broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's login name."
        },
        "from_broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's display name."
        },
        "viewer_count": {
          "type": "number",
          "required": true,
          "description": "The number of users that were watching the from-broadcaster's stream at the time of the Shoutout."
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The UTC timestamp (in RFC3339 format) of when the moderator sent the Shoutout."
        }
      }
    }
  },
  "conduit.shard.disabled@1": {
    "id": "conduit.shard.disabled@1",
    "label": "Conduit Shard Disabled",
    "type": "conduit.shard.disabled",
    "version": "1",
    "primary": true,
    "scopes": null,
    "description": "EventSub disables a shard due to the status of the underlying transport changing.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "client_id": {
          "type": "string",
          "required": true,
          "description": "Your application's client id. The provided client_id must match the client ID in the application access token."
        },
        "conduit_id": {
          "type": "string",
          "required": false,
          "description": "The conduit ID to receive events for. If omitted, events for all of this client's conduits are sent."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "conduit_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the conduit."
        },
        "shard_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the disabled shard."
        },
        "status": {
          "type": "string",
          "required": true,
          "description": "The new status of the transport."
        },
        "transport": {
          "type": "object",
          "required": true,
          "description": "The disabled transport."
        },
        "method": {
          "type": "string",
          "required": true,
          "description": "websocket or webhook"
        },
        "callback": {
          "type": "string",
          "required": false,
          "description": "Webhook callback URL. Null if method is set to websocket."
        },
        "session_id": {
          "type": "string",
          "required": false,
          "description": "WebSocket session ID. Null if method is set to webhook."
        },
        "connected_at": {
          "type": "string",
          "required": false,
          "description": "Time that the WebSocket session connected. Null if method is set to webhook."
        },
        "disconnected_at": {
          "type": "string",
          "required": false,
          "description": "Time that the WebSocket session disconnected. Null if method is set to webhook."
        }
      }
    }
  },
  "drop.entitlement.grant@1": {
    "id": "drop.entitlement.grant@1",
    "label": "Drop Entitlement Grant",
    "type": "drop.entitlement.grant",
    "version": "1",
    "primary": true,
    "scopes": null,
    "description": "an entitlement for a Drop is granted to a user.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "organization_id": {
          "type": "string",
          "required": true,
          "description": "The organization ID of the organization that owns the game on the developer portal."
        },
        "category_id": {
          "type": "string",
          "required": false,
          "description": "The category (or game) ID of the game for which entitlement notifications will be received."
        },
        "campaign_id": {
          "type": "string",
          "required": false,
          "description": "The campaign ID for a specific campaign for which entitlement notifications will be received."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "Individual event ID, as assigned by EventSub. Use this for de-duplicating messages."
        },
        "data": {
          "type": "object[]",
          "required": true,
          "description": "Entitlement object."
        }
      }
    }
  },
  "extension.bits_transaction.create@1": {
    "id": "extension.bits_transaction.create@1",
    "label": "Extension Bits Transaction Create",
    "type": "extension.bits_transaction.create",
    "version": "1",
    "primary": true,
    "scopes": null,
    "description": "a Bits transaction occurred for a specified Twitch Extension.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "extension_client_id": {
          "type": "string",
          "required": true,
          "description": "The client ID of the extension."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "extension_client_id": {
          "type": "string",
          "required": true,
          "description": "Client ID of the extension."
        },
        "id": {
          "type": "string",
          "required": true,
          "description": "Transaction ID."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The transaction's broadcaster ID."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The transaction's broadcaster login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The transaction's broadcaster display name."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The transaction's user ID."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The transaction's user login."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The transaction's user display name."
        },
        "product": {
          "type": "object",
          "required": true,
          "description": "Additional extension product information.",
          "fields": {
            "name": {
              "type": "string",
              "required": true,
              "description": "Product name."
            },
            "bits": {
              "type": "number",
              "required": true,
              "description": "Bits involved in the transaction."
            },
            "sku": {
              "type": "string",
              "required": true,
              "description": "Unique identifier for the product acquired."
            },
            "in_development": {
              "type": "boolean",
              "required": true,
              "description": "Flag indicating if the product is in development. If in_development is true, bits will be 0."
            }
          }
        }
      }
    }
  },
  "channel.goal.begin@1": {
    "id": "channel.goal.begin@1",
    "label": "Goal Begin",
    "type": "channel.goal.begin",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:goals"],
    "description": "the broadcaster begins a goal.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster to get notified about. The ID must match the user_id in the OAuth access token."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies this event."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "An ID that uniquely identifies the broadcaster."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's display name."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's user handle."
        },
        "type": {
          "type": "string",
          "required": true,
          "description": "The type of goal. Possible values are:\n- follow — The goal is to increase followers.\n- subscription — The goal is to increase subscriptions. This type shows the net increase or decrease in tier points associated with the subscriptions.\n- subscription_count — The goal is to increase subscriptions. This type shows the net increase or decrease in the number of subscriptions.\n- new_subscription — The goal is to increase subscriptions. This type shows only the net increase in tier points associated with the subscriptions (it does not account for users that unsubscribed since the goal started).\n- new_subscription_count — The goal is to increase subscriptions. This type shows only the net increase in the number of subscriptions (it does not account for users that unsubscribed since the goal started).\n- new_bit — The goal is to increase the amount of Bits used on the channel.\n- new_cheerer — The goal is to increase the number of unique Cheerers to Cheer on the channel."
        },
        "description": {
          "type": "string",
          "required": true,
          "description": "A description of the goal, if specified. The description may contain a maximum of 40 characters."
        },
        "is_achieved": {
          "type": "boolean",
          "required": true,
          "description": "A Boolean value that indicates whether the broadcaster achieved their goal. Is true if the goal was achieved; otherwise, false.\n\nOnly the channel.goal.end event includes this field."
        },
        "current_amount": {
          "type": "number",
          "required": true,
          "description": "The goal's current value.\n\nThe goal's type determines how this value is increased or decreased.\n- If type is follow, this field is set to the broadcaster's current number of followers. This number increases with new followers and decreases when users unfollow the broadcaster.\n- If type is subscription, this field is increased and decreased by the points value associated with the subscription tier.\n- If type is subscription_count, this field is increased by 1 for each new subscription and decreased by 1 for each user that unsubscribes.\n- If type is new_subscription, this field is increased by the points value associated with the subscription tier.\n- If type is new_subscription_count, this field is increased by 1 for each new subscription."
        },
        "target_amount": {
          "type": "number",
          "required": true,
          "description": "The goal's target value."
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The UTC timestamp in RFC 3339 format, which indicates when the broadcaster created the goal."
        },
        "ended_at": {
          "type": "string",
          "required": true,
          "description": "The UTC timestamp in RFC 3339 format, which indicates when the broadcaster ended the goal.\n\nOnly the channel.goal.end event includes this field."
        }
      }
    }
  },
  "channel.goal.progress@1": {
    "id": "channel.goal.progress@1",
    "label": "Goal Progress",
    "type": "channel.goal.progress",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:goals"],
    "description": "progress (either positive or negative) is made towards the broadcaster's goal.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster to get notified about. The ID must match the user_id in the OAuth access token."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies this event."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "An ID that uniquely identifies the broadcaster."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's display name."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's user handle."
        },
        "type": {
          "type": "string",
          "required": true,
          "description": "The type of goal. Possible values are:\n- follow — The goal is to increase followers.\n- subscription — The goal is to increase subscriptions. This type shows the net increase or decrease in tier points associated with the subscriptions.\n- subscription_count — The goal is to increase subscriptions. This type shows the net increase or decrease in the number of subscriptions.\n- new_subscription — The goal is to increase subscriptions. This type shows only the net increase in tier points associated with the subscriptions (it does not account for users that unsubscribed since the goal started).\n- new_subscription_count — The goal is to increase subscriptions. This type shows only the net increase in the number of subscriptions (it does not account for users that unsubscribed since the goal started).\n- new_bit — The goal is to increase the amount of Bits used on the channel.\n- new_cheerer — The goal is to increase the number of unique Cheerers to Cheer on the channel."
        },
        "description": {
          "type": "string",
          "required": true,
          "description": "A description of the goal, if specified. The description may contain a maximum of 40 characters."
        },
        "is_achieved": {
          "type": "boolean",
          "required": true,
          "description": "A Boolean value that indicates whether the broadcaster achieved their goal. Is true if the goal was achieved; otherwise, false.\n\nOnly the channel.goal.end event includes this field."
        },
        "current_amount": {
          "type": "number",
          "required": true,
          "description": "The goal's current value.\n\nThe goal's type determines how this value is increased or decreased.\n- If type is follow, this field is set to the broadcaster's current number of followers. This number increases with new followers and decreases when users unfollow the broadcaster.\n- If type is subscription, this field is increased and decreased by the points value associated with the subscription tier.\n- If type is subscription_count, this field is increased by 1 for each new subscription and decreased by 1 for each user that unsubscribes.\n- If type is new_subscription, this field is increased by the points value associated with the subscription tier.\n- If type is new_subscription_count, this field is increased by 1 for each new subscription."
        },
        "target_amount": {
          "type": "number",
          "required": true,
          "description": "The goal's target value."
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The UTC timestamp in RFC 3339 format, which indicates when the broadcaster created the goal."
        },
        "ended_at": {
          "type": "string",
          "required": true,
          "description": "The UTC timestamp in RFC 3339 format, which indicates when the broadcaster ended the goal.\n\nOnly the channel.goal.end event includes this field."
        }
      }
    }
  },
  "channel.goal.end@1": {
    "id": "channel.goal.end@1",
    "label": "Goal End",
    "type": "channel.goal.end",
    "version": "1",
    "primary": true,
    "scopes": ["channel:read:goals"],
    "description": "the broadcaster ends a goal.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the broadcaster to get notified about. The ID must match the user_id in the OAuth access token."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "An ID that identifies this event."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "An ID that uniquely identifies the broadcaster."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's display name."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's user handle."
        },
        "type": {
          "type": "string",
          "required": true,
          "description": "The type of goal. Possible values are:\n- follow — The goal is to increase followers.\n- subscription — The goal is to increase subscriptions. This type shows the net increase or decrease in tier points associated with the subscriptions.\n- subscription_count — The goal is to increase subscriptions. This type shows the net increase or decrease in the number of subscriptions.\n- new_subscription — The goal is to increase subscriptions. This type shows only the net increase in tier points associated with the subscriptions (it does not account for users that unsubscribed since the goal started).\n- new_subscription_count — The goal is to increase subscriptions. This type shows only the net increase in the number of subscriptions (it does not account for users that unsubscribed since the goal started).\n- new_bit — The goal is to increase the amount of Bits used on the channel.\n- new_cheerer — The goal is to increase the number of unique Cheerers to Cheer on the channel."
        },
        "description": {
          "type": "string",
          "required": true,
          "description": "A description of the goal, if specified. The description may contain a maximum of 40 characters."
        },
        "is_achieved": {
          "type": "boolean",
          "required": true,
          "description": "A Boolean value that indicates whether the broadcaster achieved their goal. Is true if the goal was achieved; otherwise, false.\n\nOnly the channel.goal.end event includes this field."
        },
        "current_amount": {
          "type": "number",
          "required": true,
          "description": "The goal's current value.\n\nThe goal's type determines how this value is increased or decreased.\n- If type is follow, this field is set to the broadcaster's current number of followers. This number increases with new followers and decreases when users unfollow the broadcaster.\n- If type is subscription, this field is increased and decreased by the points value associated with the subscription tier.\n- If type is subscription_count, this field is increased by 1 for each new subscription and decreased by 1 for each user that unsubscribes.\n- If type is new_subscription, this field is increased by the points value associated with the subscription tier.\n- If type is new_subscription_count, this field is increased by 1 for each new subscription."
        },
        "target_amount": {
          "type": "number",
          "required": true,
          "description": "The goal's target value."
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The UTC timestamp in RFC 3339 format, which indicates when the broadcaster created the goal."
        },
        "ended_at": {
          "type": "string",
          "required": true,
          "description": "The UTC timestamp in RFC 3339 format, which indicates when the broadcaster ended the goal.\n\nOnly the channel.goal.end event includes this field."
        }
      }
    }
  },
  "stream.online@1": {
    "id": "stream.online@1",
    "label": "Stream Online",
    "type": "stream.online",
    "version": "1",
    "primary": true,
    "scopes": [],
    "description": "the specified broadcaster starts a stream.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID you want to get stream online notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "id": {
          "type": "string",
          "required": true,
          "description": "The id of the stream."
        },
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's user id."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's user login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's user display name."
        },
        "type": {
          "type": "string",
          "required": true,
          "description": "The stream type. Valid values are: live, playlist, watch_party, premiere, rerun."
        },
        "started_at": {
          "type": "string",
          "required": true,
          "description": "The timestamp at which the stream went online at."
        }
      }
    }
  },
  "stream.offline@1": {
    "id": "stream.offline@1",
    "label": "Stream Offline",
    "type": "stream.offline",
    "version": "1",
    "primary": true,
    "scopes": [],
    "description": "the specified broadcaster stops a stream.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster user ID you want to get stream offline notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "broadcaster_user_id": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's user id."
        },
        "broadcaster_user_login": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's user login."
        },
        "broadcaster_user_name": {
          "type": "string",
          "required": true,
          "description": "The broadcaster's user display name."
        }
      }
    }
  },
  "user.authorization.grant@1": {
    "id": "user.authorization.grant@1",
    "label": "User Authorization Grant",
    "type": "user.authorization.grant",
    "version": "1",
    "primary": true,
    "scopes": null,
    "description": "a user's authorization has been granted to your client id.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "client_id": {
          "type": "string",
          "required": true,
          "description": "Your application's client id. The provided client_id must match the client id in the application access token."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "client_id": {
          "type": "string",
          "required": true,
          "description": "The client_id of the application that was granted user access."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user id for the user who has granted authorization for your client id."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The user login for the user who has granted authorization for your client id."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The user display name for the user who has granted authorization for your client id."
        }
      }
    }
  },
  "user.authorization.revoke@1": {
    "id": "user.authorization.revoke@1",
    "label": "User Authorization Revoke",
    "type": "user.authorization.revoke",
    "version": "1",
    "primary": true,
    "scopes": null,
    "description": "a user's authorization has been revoked for your client id.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "client_id": {
          "type": "string",
          "required": true,
          "description": "Your application's client id. The provided client_id must match the client id in the application access token."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "client_id": {
          "type": "string",
          "required": true,
          "description": "The client_id of the application with revoked user access."
        },
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user id for the user who has revoked authorization for your client id."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The user login for the user who has revoked authorization for your client id. This is null if the user no longer exists."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The user display name for the user who has revoked authorization for your client id. This is null if the user no longer exists."
        }
      }
    }
  },
  "user.update@1": {
    "id": "user.update@1",
    "label": "User Update",
    "type": "user.update",
    "version": "1",
    "primary": true,
    "scopes": ["user:read:email"],
    "description": "a user has updated their account.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user ID for the user you want update notifications for."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user's user id."
        },
        "user_login": {
          "type": "string",
          "required": true,
          "description": "The user's user login."
        },
        "user_name": {
          "type": "string",
          "required": true,
          "description": "The user's user display name."
        },
        "email": {
          "type": "string",
          "required": true,
          "description": "The user's email address. The event includes the user's email address only if the app used to request this event type includes the user:read:email scope for the user; otherwise, the field is set to an empty string. See \"Create EventSub Subscription\"."
        },
        "email_verified": {
          "type": "boolean",
          "required": true,
          "description": "A Boolean value that determines whether Twitch has verified the user's email address. Is true if Twitch has verified the email address; otherwise, false.\n\nNOTE: Ignore this field if the email field contains an empty string."
        },
        "description": {
          "type": "string",
          "required": true,
          "description": "The user's description."
        }
      }
    }
  },
  "user.whisper.message@1": {
    "id": "user.whisper.message@1",
    "label": "Whisper Received",
    "type": "user.whisper.message",
    "version": "1",
    "primary": true,
    "scopes": ["user:read:whispers", "user:manage:whispers"],
    "description": "a user receives a whisper.",
    "condition": {
      "type": "object",
      "required": true,
      "fields": {
        "user_id": {
          "type": "string",
          "required": true,
          "description": "The user_id of the person receiving whispers."
        }
      }
    },
    "event": {
      "type": "object",
      "required": true,
      "fields": {
        "from_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the user sending the message."
        },
        "from_user_name": {
          "type": "string",
          "required": true,
          "description": "The name of the user sending the message."
        },
        "from_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the user sending the message."
        },
        "to_user_id": {
          "type": "string",
          "required": true,
          "description": "The ID of the user receiving the message."
        },
        "to_user_name": {
          "type": "string",
          "required": true,
          "description": "The name of the user receiving the message."
        },
        "to_user_login": {
          "type": "string",
          "required": true,
          "description": "The login of the user receiving the message."
        },
        "whisper_id": {
          "type": "string",
          "required": true,
          "description": "The whisper ID."
        },
        "whisper": {
          "type": "object",
          "required": true,
          "description": "Object containing whisper information.",
          "fields": {
            "text": {
              "type": "string",
              "required": true,
              "description": "The body of the whisper message."
            }
          }
        }
      }
    }
  }
}
